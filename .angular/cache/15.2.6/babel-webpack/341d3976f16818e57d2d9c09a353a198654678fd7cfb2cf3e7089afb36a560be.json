{"ast":null,"code":"import _asyncToGenerator from \"/Users/bence/Desktop/angular-learning/kanban/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { db } from '../../utils/db.connector';\nexport class TaskService {\n  constructor() {\n    console.log('TaskService created');\n  }\n  getAllTasks() {\n    return _asyncToGenerator(function* () {\n      const tasks = yield db.tasks.findMany({\n        include: {\n          column: {\n            include: {\n              board: true\n            }\n          }\n        }\n      });\n      return tasks;\n    })();\n  }\n  updateTaskRelation(idTask, idColumn) {\n    return _asyncToGenerator(function* () {\n      const task = yield db.tasks.update({\n        where: {\n          id: idTask\n        },\n        data: {\n          columnId: idColumn\n        }\n      });\n      return task;\n    })();\n  }\n}","map":{"version":3,"mappings":";AAAA,SAASA,EAAE,QAAQ,0BAA0B;AAI7C,OAAM,MAAOC,WAAW;EACpBC;IACIC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EACtC;EAEMC,WAAW;IAAA;MACb,MAAMC,KAAK,SAASN,EAAE,CAACM,KAAK,CAACC,QAAQ,CAAC;QAClCC,OAAO,EAAE;UACLC,MAAM,EAAE;YACJD,OAAO,EAAE;cACLE,KAAK,EAAE;;;;OAItB,CAAC;MACF,OAAOJ,KAAK;IAAA;EAChB;EAEMK,kBAAkB,CAACC,MAAc,EAAEC,QAAgB;IAAA;MACrD,MAAMC,IAAI,SAASd,EAAE,CAACM,KAAK,CAACS,MAAM,CAAC;QAC/BC,KAAK,EAAE;UACHC,EAAE,EAAEL;SACP;QACDM,IAAI,EAAE;UACFC,QAAQ,EAAEN;;OAEjB,CAAC;MACF,OAAOC,IAAI;IAAA;EACf","names":["db","TaskService","constructor","console","log","getAllTasks","tasks","findMany","include","column","board","updateTaskRelation","idTask","idColumn","task","update","where","id","data","columnId"],"sourceRoot":"","sources":["/Users/bence/Desktop/angular-learning/kanban/server/routes/tasks/tasks.service.ts"],"sourcesContent":["import { db } from '../../utils/db.connector';\n\n\n\nexport class TaskService {\n    constructor(){\n        console.log('TaskService created');\n    }\n\n    async getAllTasks(){\n        const tasks = await db.tasks.findMany({\n            include: {\n                column: {\n                    include: {\n                        board: true\n                    }\n                }\n            }\n        });\n        return tasks\n    }\n\n    async updateTaskRelation(idTask: number, idColumn: number){\n        const task = await db.tasks.update({\n            where: {\n                id: idTask\n            },\n            data: {\n                columnId: idColumn\n            }\n        })\n        return task\n    }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}