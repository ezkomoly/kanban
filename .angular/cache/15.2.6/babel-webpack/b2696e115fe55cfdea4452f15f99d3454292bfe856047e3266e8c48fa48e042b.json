{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/task-drawer.service\";\nimport * as i2 from \"@angular/material/sidenav\";\nimport * as i3 from \"../boards/boards.component\";\nconst _c0 = [\"drawer\"];\nexport class AddTaskDrawerComponent {\n  constructor(_taskDrawerService) {\n    this._taskDrawerService = _taskDrawerService;\n  }\n  ngOnInit() {\n    this._taskDrawerService.drawerToggleSubject.subscribe(() => {\n      console.log(\"toggle was here\");\n      this.drawer.toggle();\n    });\n  }\n}\nAddTaskDrawerComponent.ɵfac = function AddTaskDrawerComponent_Factory(t) {\n  return new (t || AddTaskDrawerComponent)(i0.ɵɵdirectiveInject(i1.TaskDrawerService));\n};\nAddTaskDrawerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddTaskDrawerComponent,\n  selectors: [[\"app-add-task-drawer\"]],\n  viewQuery: function AddTaskDrawerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.drawer = _t.first);\n    }\n  },\n  decls: 5,\n  vars: 0,\n  consts: [[1, \"my-container\"], [\"mode\", \"over\", \"position\", \"end\", 1, \"my-drawer\"], [\"drawer\", \"\"], [\"type\", \"text\"]],\n  template: function AddTaskDrawerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-drawer-container\", 0)(1, \"mat-drawer\", 1, 2);\n      i0.ɵɵelement(3, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"app-boards\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [i2.MatDrawer, i2.MatDrawerContainer, i3.BoardsComponent],\n  styles: [\".my-container[_ngcontent-%COMP%] {\\n  position: absolute;\\n  right: 0px;\\n  top: 0px;\\n  bottom: 0px;\\n  background: none;\\n  min-width: 0;\\n  min-height: 0;\\n}\\n\\n.my-drawer-content[_ngcontent-%COMP%] {\\n  display: flex;\\n  height: 100%;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.my-drawer[_ngcontent-%COMP%] {\\n  padding: 30px;\\n  background-color: transparent;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZGQtdGFzay1kcmF3ZXIvYWRkLXRhc2stZHJhd2VyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7RUFDQSxVQUFBO0VBQ0EsUUFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtFQUlBLFlBQUE7RUFDQSxhQUFBO0FBRko7O0FBSUE7RUFDSSxhQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7QUFESjs7QUFHQTtFQUNJLGFBQUE7RUFDQSw2QkFBQTtBQUFKIiwic291cmNlc0NvbnRlbnQiOlsiLm15LWNvbnRhaW5lciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwcHg7XG4gICAgdG9wOiAwcHg7XG4gICAgYm90dG9tOiAwcHg7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcblxuICAgIC8vIE92ZXJyaWRlIEF1dG9tYXRpYyBNaW5pbXVtIFNpemVcbiAgICAvLyBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8zNjI0NzE0MC93aHktZG9udC1mbGV4LWl0ZW1zLXNocmluay1wYXN0LWNvbnRlbnQtc2l6ZVxuICAgIG1pbi13aWR0aDogMDtcbiAgICBtaW4taGVpZ2h0OiAwO1xufVxuLm15LWRyYXdlci1jb250ZW50IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuLm15LWRyYXdlciB7XG4gICAgcGFkZGluZzogMzBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;AASA,OAAM,MAAOA,sBAAsB;EAI/BC,YAAoBC,kBAAqC;IAArC,uBAAkB,GAAlBA,kBAAkB;EAAuB;EAE7DC,QAAQ;IACN,IAAI,CAACD,kBAAkB,CAACE,mBAAmB,CAACC,SAAS,CAAC,MAAK;MACzDC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9B,IAAI,CAACC,MAAM,CAACC,MAAM,EAAE;IACtB,CAAC,CAAC;EACJ;;AAXST,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAU;EAAAC;IAAA;;;;;;;;;;;;;MCTnCC,+CAA2C;MAEnCA,2BAAoB;MACxBA,iBAAa;MACbA,6BAAyB;MAC7BA,iBAAuB","names":["AddTaskDrawerComponent","constructor","_taskDrawerService","ngOnInit","drawerToggleSubject","subscribe","console","log","drawer","toggle","selectors","viewQuery","i0"],"sourceRoot":"","sources":["/Users/bence/Desktop/angular-learning/kanban/src/app/components/add-task-drawer/add-task-drawer.component.ts","/Users/bence/Desktop/angular-learning/kanban/src/app/components/add-task-drawer/add-task-drawer.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDrawer } from '@angular/material/sidenav';\nimport { TaskDrawerService } from 'src/app/services/task-drawer.service';\n\n@Component({\n  selector: 'app-add-task-drawer',\n  templateUrl: './add-task-drawer.component.html',\n  styleUrls: ['./add-task-drawer.component.scss']\n})\nexport class AddTaskDrawerComponent implements OnInit {\n\n    @ViewChild('drawer') public drawer: MatDrawer;\n\n    constructor(private _taskDrawerService: TaskDrawerService) { }\n  \n    ngOnInit(): void {\n      this._taskDrawerService.drawerToggleSubject.subscribe(() => {\n        console.log(\"toggle was here\")\n        this.drawer.toggle();\n      });\n    }\n  \n}\n","<mat-drawer-container class=\"my-container\">\n    <mat-drawer #drawer class=\"my-drawer\" mode=\"over\" position=\"end\">\n        <input type=\"text\"/>\n    </mat-drawer>\n    <app-boards></app-boards>\n</mat-drawer-container> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}