{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TasksService {\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n    this.tasks = [];\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  updateTaskRelation(idColumn, idTask) {\n    console.log('request is here');\n    console.log(idColumn, idTask);\n    return this._httpClient.put(`http://localhost:4000/tasks/${idTask}`, {\n      idColumn\n    }, this.httpOptions);\n  }\n}\nTasksService.ɵfac = function TasksService_Factory(t) {\n  return new (t || TasksService)(i0.ɵɵinject(i1.HttpClient));\n};\nTasksService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TasksService,\n  factory: TasksService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,YAAY;EAOvBC,YAAoBC,WAAuB;IAAvB,gBAAW,GAAXA,WAAW;IAL/B,UAAK,GAAU,EAAE;IACjB,gBAAW,GAAG;MACZC,OAAO,EAAE,IAAIJ,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;EAE8C;EAG/CK,kBAAkB,CAACC,QAAgB,EAAEC,MAAc;IACjDC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BD,OAAO,CAACC,GAAG,CAACH,QAAQ,EAAEC,MAAM,CAAC;IAC7B,OAAO,IAAI,CAACJ,WAAW,CAACO,GAAG,CAAC,+BAA+BH,MAAM,EAAE,EAAE;MAAED;IAAQ,CAAE,EAAE,IAAI,CAACK,WAAW,CAAC;EACtG;;AAdWV,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAW,SAAZX,YAAY;EAAAY,YAFX;AAAM","names":["HttpHeaders","TasksService","constructor","_httpClient","headers","updateTaskRelation","idColumn","idTask","console","log","put","httpOptions","factory","providedIn"],"sourceRoot":"","sources":["/Users/bence/Desktop/angular-learning/kanban/src/app/services/tasks.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TasksService {\n\n  tasks: any[] = [];\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private _httpClient: HttpClient) { }\n\n\n  updateTaskRelation(idColumn: number, idTask: number): Observable<any> {\n    console.log('request is here')\n    console.log(idColumn, idTask)\n    return this._httpClient.put(`http://localhost:4000/tasks/${idTask}`, { idColumn }, this.httpOptions);\n  }\n\n}\n "]},"metadata":{},"sourceType":"module","externalDependencies":[]}