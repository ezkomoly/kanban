{"ast":null,"code":"\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", {\n  value,\n  configurable: true\n});\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod2 => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod2);\n\n// src/runtime/index-browser.ts\nvar index_browser_exports = {};\n__export(index_browser_exports, {\n  Decimal: () => decimal_default,\n  makeStrictEnum: () => makeStrictEnum,\n  objectEnumValues: () => objectEnumValues\n});\nmodule.exports = __toCommonJS(index_browser_exports);\n\n// src/runtime/object-enums.ts\nvar secret = Symbol();\nvar representations = /* @__PURE__ */new WeakMap();\nvar ObjectEnumValue = class {\n  constructor(arg) {\n    if (arg === secret) {\n      representations.set(this, `Prisma.${this._getName()}`);\n    } else {\n      representations.set(this, `new Prisma.${this._getNamespace()}.${this._getName()}()`);\n    }\n  }\n  _getName() {\n    return this.constructor.name;\n  }\n  toString() {\n    return representations.get(this);\n  }\n};\n__name(ObjectEnumValue, \"ObjectEnumValue\");\nvar NullTypesEnumValue = class extends ObjectEnumValue {\n  _getNamespace() {\n    return \"NullTypes\";\n  }\n};\n__name(NullTypesEnumValue, \"NullTypesEnumValue\");\nvar DbNull = class extends NullTypesEnumValue {};\n__name(DbNull, \"DbNull\");\nvar JsonNull = class extends NullTypesEnumValue {};\n__name(JsonNull, \"JsonNull\");\nvar AnyNull = class extends NullTypesEnumValue {};\n__name(AnyNull, \"AnyNull\");\nvar objectEnumValues = {\n  classes: {\n    DbNull,\n    JsonNull,\n    AnyNull\n  },\n  instances: {\n    DbNull: new DbNull(secret),\n    JsonNull: new JsonNull(secret),\n    AnyNull: new AnyNull(secret)\n  }\n};\n\n// src/runtime/strictEnum.ts\nvar allowList = /* @__PURE__ */new Set([\"toJSON\", \"asymmetricMatch\", Symbol.iterator, Symbol.toStringTag, Symbol.isConcatSpreadable, Symbol.toPrimitive]);\nfunction makeStrictEnum(definition) {\n  return new Proxy(definition, {\n    get(target, property) {\n      if (property in target) {\n        return target[property];\n      }\n      if (allowList.has(property)) {\n        return void 0;\n      }\n      throw new TypeError(`Invalid enum value: ${String(property)}`);\n    }\n  });\n}\n__name(makeStrictEnum, \"makeStrictEnum\");\n\n// ../../node_modules/.pnpm/decimal.js@10.4.3/node_modules/decimal.js/decimal.mjs\nvar EXP_LIMIT = 9e15;\nvar MAX_DIGITS = 1e9;\nvar NUMERALS = \"0123456789abcdef\";\nvar LN10 = \"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\";\nvar PI = \"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\";\nvar DEFAULTS = {\n  precision: 20,\n  rounding: 4,\n  modulo: 1,\n  toExpNeg: -7,\n  toExpPos: 21,\n  minE: -EXP_LIMIT,\n  maxE: EXP_LIMIT,\n  crypto: false\n};\nvar inexact;\nvar quadrant;\nvar external = true;\nvar decimalError = \"[DecimalError] \";\nvar invalidArgument = decimalError + \"Invalid argument: \";\nvar precisionLimitExceeded = decimalError + \"Precision limit exceeded\";\nvar cryptoUnavailable = decimalError + \"crypto unavailable\";\nvar tag = \"[object Decimal]\";\nvar mathfloor = Math.floor;\nvar mathpow = Math.pow;\nvar isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i;\nvar isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i;\nvar isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i;\nvar isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\nvar BASE = 1e7;\nvar LOG_BASE = 7;\nvar MAX_SAFE_INTEGER = 9007199254740991;\nvar LN10_PRECISION = LN10.length - 1;\nvar PI_PRECISION = PI.length - 1;\nvar P = {\n  toStringTag: tag\n};\nP.absoluteValue = P.abs = function () {\n  var x = new this.constructor(this);\n  if (x.s < 0) x.s = 1;\n  return finalise(x);\n};\nP.ceil = function () {\n  return finalise(new this.constructor(this), this.e + 1, 2);\n};\nP.clampedTo = P.clamp = function (min2, max2) {\n  var k,\n    x = this,\n    Ctor = x.constructor;\n  min2 = new Ctor(min2);\n  max2 = new Ctor(max2);\n  if (!min2.s || !max2.s) return new Ctor(NaN);\n  if (min2.gt(max2)) throw Error(invalidArgument + max2);\n  k = x.cmp(min2);\n  return k < 0 ? min2 : x.cmp(max2) > 0 ? max2 : new Ctor(x);\n};\nP.comparedTo = P.cmp = function (y) {\n  var i,\n    j,\n    xdL,\n    ydL,\n    x = this,\n    xd = x.d,\n    yd = (y = new x.constructor(y)).d,\n    xs = x.s,\n    ys = y.s;\n  if (!xd || !yd) {\n    return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\n  }\n  if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\n  if (xs !== ys) return xs;\n  if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\n  xdL = xd.length;\n  ydL = yd.length;\n  for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\n    if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\n  }\n  return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\n};\nP.cosine = P.cos = function () {\n  var pr,\n    rm,\n    x = this,\n    Ctor = x.constructor;\n  if (!x.d) return new Ctor(NaN);\n  if (!x.d[0]) return new Ctor(1);\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\n  Ctor.rounding = 1;\n  x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\n  Ctor.precision = pr;\n  Ctor.rounding = rm;\n  return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\n};\nP.cubeRoot = P.cbrt = function () {\n  var e,\n    m,\n    n,\n    r,\n    rep,\n    s,\n    sd,\n    t,\n    t3,\n    t3plusx,\n    x = this,\n    Ctor = x.constructor;\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\n  external = false;\n  s = x.s * mathpow(x.s * x, 1 / 3);\n  if (!s || Math.abs(s) == 1 / 0) {\n    n = digitsToString(x.d);\n    e = x.e;\n    if (s = (e - n.length + 1) % 3) n += s == 1 || s == -2 ? \"0\" : \"00\";\n    s = mathpow(n, 1 / 3);\n    e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\n    if (s == 1 / 0) {\n      n = \"5e\" + e;\n    } else {\n      n = s.toExponential();\n      n = n.slice(0, n.indexOf(\"e\") + 1) + e;\n    }\n    r = new Ctor(n);\n    r.s = x.s;\n  } else {\n    r = new Ctor(s.toString());\n  }\n  sd = (e = Ctor.precision) + 3;\n  for (;;) {\n    t = r;\n    t3 = t.times(t).times(t);\n    t3plusx = t3.plus(x);\n    r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\n      n = n.slice(sd - 3, sd + 1);\n      if (n == \"9999\" || !rep && n == \"4999\") {\n        if (!rep) {\n          finalise(t, e + 1, 0);\n          if (t.times(t).times(t).eq(x)) {\n            r = t;\n            break;\n          }\n        }\n        sd += 4;\n        rep = 1;\n      } else {\n        if (!+n || !+n.slice(1) && n.charAt(0) == \"5\") {\n          finalise(r, e + 1, 1);\n          m = !r.times(r).times(r).eq(x);\n        }\n        break;\n      }\n    }\n  }\n  external = true;\n  return finalise(r, e, Ctor.rounding, m);\n};\nP.decimalPlaces = P.dp = function () {\n  var w,\n    d = this.d,\n    n = NaN;\n  if (d) {\n    w = d.length - 1;\n    n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\n    w = d[w];\n    if (w) for (; w % 10 == 0; w /= 10) n--;\n    if (n < 0) n = 0;\n  }\n  return n;\n};\nP.dividedBy = P.div = function (y) {\n  return divide(this, new this.constructor(y));\n};\nP.dividedToIntegerBy = P.divToInt = function (y) {\n  var x = this,\n    Ctor = x.constructor;\n  return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\n};\nP.equals = P.eq = function (y) {\n  return this.cmp(y) === 0;\n};\nP.floor = function () {\n  return finalise(new this.constructor(this), this.e + 1, 3);\n};\nP.greaterThan = P.gt = function (y) {\n  return this.cmp(y) > 0;\n};\nP.greaterThanOrEqualTo = P.gte = function (y) {\n  var k = this.cmp(y);\n  return k == 1 || k === 0;\n};\nP.hyperbolicCosine = P.cosh = function () {\n  var k,\n    n,\n    pr,\n    rm,\n    len,\n    x = this,\n    Ctor = x.constructor,\n    one = new Ctor(1);\n  if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\n  if (x.isZero()) return one;\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\n  Ctor.rounding = 1;\n  len = x.d.length;\n  if (len < 32) {\n    k = Math.ceil(len / 3);\n    n = (1 / tinyPow(4, k)).toString();\n  } else {\n    k = 16;\n    n = \"2.3283064365386962890625e-10\";\n  }\n  x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\n  var cosh2_x,\n    i = k,\n    d8 = new Ctor(8);\n  for (; i--;) {\n    cosh2_x = x.times(x);\n    x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\n  }\n  return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\n};\nP.hyperbolicSine = P.sinh = function () {\n  var k,\n    pr,\n    rm,\n    len,\n    x = this,\n    Ctor = x.constructor;\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\n  Ctor.rounding = 1;\n  len = x.d.length;\n  if (len < 3) {\n    x = taylorSeries(Ctor, 2, x, x, true);\n  } else {\n    k = 1.4 * Math.sqrt(len);\n    k = k > 16 ? 16 : k | 0;\n    x = x.times(1 / tinyPow(5, k));\n    x = taylorSeries(Ctor, 2, x, x, true);\n    var sinh2_x,\n      d5 = new Ctor(5),\n      d16 = new Ctor(16),\n      d20 = new Ctor(20);\n    for (; k--;) {\n      sinh2_x = x.times(x);\n      x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\n    }\n  }\n  Ctor.precision = pr;\n  Ctor.rounding = rm;\n  return finalise(x, pr, rm, true);\n};\nP.hyperbolicTangent = P.tanh = function () {\n  var pr,\n    rm,\n    x = this,\n    Ctor = x.constructor;\n  if (!x.isFinite()) return new Ctor(x.s);\n  if (x.isZero()) return new Ctor(x);\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  Ctor.precision = pr + 7;\n  Ctor.rounding = 1;\n  return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\n};\nP.inverseCosine = P.acos = function () {\n  var halfPi,\n    x = this,\n    Ctor = x.constructor,\n    k = x.abs().cmp(1),\n    pr = Ctor.precision,\n    rm = Ctor.rounding;\n  if (k !== -1) {\n    return k === 0 ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0) : new Ctor(NaN);\n  }\n  if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\n  Ctor.precision = pr + 6;\n  Ctor.rounding = 1;\n  x = x.asin();\n  halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\n  Ctor.precision = pr;\n  Ctor.rounding = rm;\n  return halfPi.minus(x);\n};\nP.inverseHyperbolicCosine = P.acosh = function () {\n  var pr,\n    rm,\n    x = this,\n    Ctor = x.constructor;\n  if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\n  if (!x.isFinite()) return new Ctor(x);\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\n  Ctor.rounding = 1;\n  external = false;\n  x = x.times(x).minus(1).sqrt().plus(x);\n  external = true;\n  Ctor.precision = pr;\n  Ctor.rounding = rm;\n  return x.ln();\n};\nP.inverseHyperbolicSine = P.asinh = function () {\n  var pr,\n    rm,\n    x = this,\n    Ctor = x.constructor;\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\n  Ctor.rounding = 1;\n  external = false;\n  x = x.times(x).plus(1).sqrt().plus(x);\n  external = true;\n  Ctor.precision = pr;\n  Ctor.rounding = rm;\n  return x.ln();\n};\nP.inverseHyperbolicTangent = P.atanh = function () {\n  var pr,\n    rm,\n    wpr,\n    xsd,\n    x = this,\n    Ctor = x.constructor;\n  if (!x.isFinite()) return new Ctor(NaN);\n  if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  xsd = x.sd();\n  if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\n  Ctor.precision = wpr = xsd - x.e;\n  x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\n  Ctor.precision = pr + 4;\n  Ctor.rounding = 1;\n  x = x.ln();\n  Ctor.precision = pr;\n  Ctor.rounding = rm;\n  return x.times(0.5);\n};\nP.inverseSine = P.asin = function () {\n  var halfPi,\n    k,\n    pr,\n    rm,\n    x = this,\n    Ctor = x.constructor;\n  if (x.isZero()) return new Ctor(x);\n  k = x.abs().cmp(1);\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  if (k !== -1) {\n    if (k === 0) {\n      halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\n      halfPi.s = x.s;\n      return halfPi;\n    }\n    return new Ctor(NaN);\n  }\n  Ctor.precision = pr + 6;\n  Ctor.rounding = 1;\n  x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\n  Ctor.precision = pr;\n  Ctor.rounding = rm;\n  return x.times(2);\n};\nP.inverseTangent = P.atan = function () {\n  var i,\n    j,\n    k,\n    n,\n    px,\n    t,\n    r,\n    wpr,\n    x2,\n    x = this,\n    Ctor = x.constructor,\n    pr = Ctor.precision,\n    rm = Ctor.rounding;\n  if (!x.isFinite()) {\n    if (!x.s) return new Ctor(NaN);\n    if (pr + 4 <= PI_PRECISION) {\n      r = getPi(Ctor, pr + 4, rm).times(0.5);\n      r.s = x.s;\n      return r;\n    }\n  } else if (x.isZero()) {\n    return new Ctor(x);\n  } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\n    r = getPi(Ctor, pr + 4, rm).times(0.25);\n    r.s = x.s;\n    return r;\n  }\n  Ctor.precision = wpr = pr + 10;\n  Ctor.rounding = 1;\n  k = Math.min(28, wpr / LOG_BASE + 2 | 0);\n  for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\n  external = false;\n  j = Math.ceil(wpr / LOG_BASE);\n  n = 1;\n  x2 = x.times(x);\n  r = new Ctor(x);\n  px = x;\n  for (; i !== -1;) {\n    px = px.times(x2);\n    t = r.minus(px.div(n += 2));\n    px = px.times(x2);\n    r = t.plus(px.div(n += 2));\n    if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\n  }\n  if (k) r = r.times(2 << k - 1);\n  external = true;\n  return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\n};\nP.isFinite = function () {\n  return !!this.d;\n};\nP.isInteger = P.isInt = function () {\n  return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\n};\nP.isNaN = function () {\n  return !this.s;\n};\nP.isNegative = P.isNeg = function () {\n  return this.s < 0;\n};\nP.isPositive = P.isPos = function () {\n  return this.s > 0;\n};\nP.isZero = function () {\n  return !!this.d && this.d[0] === 0;\n};\nP.lessThan = P.lt = function (y) {\n  return this.cmp(y) < 0;\n};\nP.lessThanOrEqualTo = P.lte = function (y) {\n  return this.cmp(y) < 1;\n};\nP.logarithm = P.log = function (base) {\n  var isBase10,\n    d,\n    denominator,\n    k,\n    inf,\n    num,\n    sd,\n    r,\n    arg = this,\n    Ctor = arg.constructor,\n    pr = Ctor.precision,\n    rm = Ctor.rounding,\n    guard = 5;\n  if (base == null) {\n    base = new Ctor(10);\n    isBase10 = true;\n  } else {\n    base = new Ctor(base);\n    d = base.d;\n    if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\n    isBase10 = base.eq(10);\n  }\n  d = arg.d;\n  if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\n    return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\n  }\n  if (isBase10) {\n    if (d.length > 1) {\n      inf = true;\n    } else {\n      for (k = d[0]; k % 10 === 0;) k /= 10;\n      inf = k !== 1;\n    }\n  }\n  external = false;\n  sd = pr + guard;\n  num = naturalLogarithm(arg, sd);\n  denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\n  r = divide(num, denominator, sd, 1);\n  if (checkRoundingDigits(r.d, k = pr, rm)) {\n    do {\n      sd += 10;\n      num = naturalLogarithm(arg, sd);\n      denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\n      r = divide(num, denominator, sd, 1);\n      if (!inf) {\n        if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\n          r = finalise(r, pr + 1, 0);\n        }\n        break;\n      }\n    } while (checkRoundingDigits(r.d, k += 10, rm));\n  }\n  external = true;\n  return finalise(r, pr, rm);\n};\nP.minus = P.sub = function (y) {\n  var d,\n    e,\n    i,\n    j,\n    k,\n    len,\n    pr,\n    rm,\n    xd,\n    xe,\n    xLTy,\n    yd,\n    x = this,\n    Ctor = x.constructor;\n  y = new Ctor(y);\n  if (!x.d || !y.d) {\n    if (!x.s || !y.s) y = new Ctor(NaN);else if (x.d) y.s = -y.s;else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\n    return y;\n  }\n  if (x.s != y.s) {\n    y.s = -y.s;\n    return x.plus(y);\n  }\n  xd = x.d;\n  yd = y.d;\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  if (!xd[0] || !yd[0]) {\n    if (yd[0]) y.s = -y.s;else if (xd[0]) y = new Ctor(x);else return new Ctor(rm === 3 ? -0 : 0);\n    return external ? finalise(y, pr, rm) : y;\n  }\n  e = mathfloor(y.e / LOG_BASE);\n  xe = mathfloor(x.e / LOG_BASE);\n  xd = xd.slice();\n  k = xe - e;\n  if (k) {\n    xLTy = k < 0;\n    if (xLTy) {\n      d = xd;\n      k = -k;\n      len = yd.length;\n    } else {\n      d = yd;\n      e = xe;\n      len = xd.length;\n    }\n    i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\n    if (k > i) {\n      k = i;\n      d.length = 1;\n    }\n    d.reverse();\n    for (i = k; i--;) d.push(0);\n    d.reverse();\n  } else {\n    i = xd.length;\n    len = yd.length;\n    xLTy = i < len;\n    if (xLTy) len = i;\n    for (i = 0; i < len; i++) {\n      if (xd[i] != yd[i]) {\n        xLTy = xd[i] < yd[i];\n        break;\n      }\n    }\n    k = 0;\n  }\n  if (xLTy) {\n    d = xd;\n    xd = yd;\n    yd = d;\n    y.s = -y.s;\n  }\n  len = xd.length;\n  for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\n  for (i = yd.length; i > k;) {\n    if (xd[--i] < yd[i]) {\n      for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\n      --xd[j];\n      xd[i] += BASE;\n    }\n    xd[i] -= yd[i];\n  }\n  for (; xd[--len] === 0;) xd.pop();\n  for (; xd[0] === 0; xd.shift()) --e;\n  if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\n  y.d = xd;\n  y.e = getBase10Exponent(xd, e);\n  return external ? finalise(y, pr, rm) : y;\n};\nP.modulo = P.mod = function (y) {\n  var q,\n    x = this,\n    Ctor = x.constructor;\n  y = new Ctor(y);\n  if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\n  if (!y.d || x.d && !x.d[0]) {\n    return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\n  }\n  external = false;\n  if (Ctor.modulo == 9) {\n    q = divide(x, y.abs(), 0, 3, 1);\n    q.s *= y.s;\n  } else {\n    q = divide(x, y, 0, Ctor.modulo, 1);\n  }\n  q = q.times(y);\n  external = true;\n  return x.minus(q);\n};\nP.naturalExponential = P.exp = function () {\n  return naturalExponential(this);\n};\nP.naturalLogarithm = P.ln = function () {\n  return naturalLogarithm(this);\n};\nP.negated = P.neg = function () {\n  var x = new this.constructor(this);\n  x.s = -x.s;\n  return finalise(x);\n};\nP.plus = P.add = function (y) {\n  var carry,\n    d,\n    e,\n    i,\n    k,\n    len,\n    pr,\n    rm,\n    xd,\n    yd,\n    x = this,\n    Ctor = x.constructor;\n  y = new Ctor(y);\n  if (!x.d || !y.d) {\n    if (!x.s || !y.s) y = new Ctor(NaN);else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\n    return y;\n  }\n  if (x.s != y.s) {\n    y.s = -y.s;\n    return x.minus(y);\n  }\n  xd = x.d;\n  yd = y.d;\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  if (!xd[0] || !yd[0]) {\n    if (!yd[0]) y = new Ctor(x);\n    return external ? finalise(y, pr, rm) : y;\n  }\n  k = mathfloor(x.e / LOG_BASE);\n  e = mathfloor(y.e / LOG_BASE);\n  xd = xd.slice();\n  i = k - e;\n  if (i) {\n    if (i < 0) {\n      d = xd;\n      i = -i;\n      len = yd.length;\n    } else {\n      d = yd;\n      e = k;\n      len = xd.length;\n    }\n    k = Math.ceil(pr / LOG_BASE);\n    len = k > len ? k + 1 : len + 1;\n    if (i > len) {\n      i = len;\n      d.length = 1;\n    }\n    d.reverse();\n    for (; i--;) d.push(0);\n    d.reverse();\n  }\n  len = xd.length;\n  i = yd.length;\n  if (len - i < 0) {\n    i = len;\n    d = yd;\n    yd = xd;\n    xd = d;\n  }\n  for (carry = 0; i;) {\n    carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\n    xd[i] %= BASE;\n  }\n  if (carry) {\n    xd.unshift(carry);\n    ++e;\n  }\n  for (len = xd.length; xd[--len] == 0;) xd.pop();\n  y.d = xd;\n  y.e = getBase10Exponent(xd, e);\n  return external ? finalise(y, pr, rm) : y;\n};\nP.precision = P.sd = function (z) {\n  var k,\n    x = this;\n  if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\n  if (x.d) {\n    k = getPrecision(x.d);\n    if (z && x.e + 1 > k) k = x.e + 1;\n  } else {\n    k = NaN;\n  }\n  return k;\n};\nP.round = function () {\n  var x = this,\n    Ctor = x.constructor;\n  return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\n};\nP.sine = P.sin = function () {\n  var pr,\n    rm,\n    x = this,\n    Ctor = x.constructor;\n  if (!x.isFinite()) return new Ctor(NaN);\n  if (x.isZero()) return new Ctor(x);\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\n  Ctor.rounding = 1;\n  x = sine(Ctor, toLessThanHalfPi(Ctor, x));\n  Ctor.precision = pr;\n  Ctor.rounding = rm;\n  return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\n};\nP.squareRoot = P.sqrt = function () {\n  var m,\n    n,\n    sd,\n    r,\n    rep,\n    t,\n    x = this,\n    d = x.d,\n    e = x.e,\n    s = x.s,\n    Ctor = x.constructor;\n  if (s !== 1 || !d || !d[0]) {\n    return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\n  }\n  external = false;\n  s = Math.sqrt(+x);\n  if (s == 0 || s == 1 / 0) {\n    n = digitsToString(d);\n    if ((n.length + e) % 2 == 0) n += \"0\";\n    s = Math.sqrt(n);\n    e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\n    if (s == 1 / 0) {\n      n = \"5e\" + e;\n    } else {\n      n = s.toExponential();\n      n = n.slice(0, n.indexOf(\"e\") + 1) + e;\n    }\n    r = new Ctor(n);\n  } else {\n    r = new Ctor(s.toString());\n  }\n  sd = (e = Ctor.precision) + 3;\n  for (;;) {\n    t = r;\n    r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\n      n = n.slice(sd - 3, sd + 1);\n      if (n == \"9999\" || !rep && n == \"4999\") {\n        if (!rep) {\n          finalise(t, e + 1, 0);\n          if (t.times(t).eq(x)) {\n            r = t;\n            break;\n          }\n        }\n        sd += 4;\n        rep = 1;\n      } else {\n        if (!+n || !+n.slice(1) && n.charAt(0) == \"5\") {\n          finalise(r, e + 1, 1);\n          m = !r.times(r).eq(x);\n        }\n        break;\n      }\n    }\n  }\n  external = true;\n  return finalise(r, e, Ctor.rounding, m);\n};\nP.tangent = P.tan = function () {\n  var pr,\n    rm,\n    x = this,\n    Ctor = x.constructor;\n  if (!x.isFinite()) return new Ctor(NaN);\n  if (x.isZero()) return new Ctor(x);\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  Ctor.precision = pr + 10;\n  Ctor.rounding = 1;\n  x = x.sin();\n  x.s = 1;\n  x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\n  Ctor.precision = pr;\n  Ctor.rounding = rm;\n  return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\n};\nP.times = P.mul = function (y) {\n  var carry,\n    e,\n    i,\n    k,\n    r,\n    rL,\n    t,\n    xdL,\n    ydL,\n    x = this,\n    Ctor = x.constructor,\n    xd = x.d,\n    yd = (y = new Ctor(y)).d;\n  y.s *= x.s;\n  if (!xd || !xd[0] || !yd || !yd[0]) {\n    return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd ? NaN : !xd || !yd ? y.s / 0 : y.s * 0);\n  }\n  e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\n  xdL = xd.length;\n  ydL = yd.length;\n  if (xdL < ydL) {\n    r = xd;\n    xd = yd;\n    yd = r;\n    rL = xdL;\n    xdL = ydL;\n    ydL = rL;\n  }\n  r = [];\n  rL = xdL + ydL;\n  for (i = rL; i--;) r.push(0);\n  for (i = ydL; --i >= 0;) {\n    carry = 0;\n    for (k = xdL + i; k > i;) {\n      t = r[k] + yd[i] * xd[k - i - 1] + carry;\n      r[k--] = t % BASE | 0;\n      carry = t / BASE | 0;\n    }\n    r[k] = (r[k] + carry) % BASE | 0;\n  }\n  for (; !r[--rL];) r.pop();\n  if (carry) ++e;else r.shift();\n  y.d = r;\n  y.e = getBase10Exponent(r, e);\n  return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\n};\nP.toBinary = function (sd, rm) {\n  return toStringBinary(this, 2, sd, rm);\n};\nP.toDecimalPlaces = P.toDP = function (dp, rm) {\n  var x = this,\n    Ctor = x.constructor;\n  x = new Ctor(x);\n  if (dp === void 0) return x;\n  checkInt32(dp, 0, MAX_DIGITS);\n  if (rm === void 0) rm = Ctor.rounding;else checkInt32(rm, 0, 8);\n  return finalise(x, dp + x.e + 1, rm);\n};\nP.toExponential = function (dp, rm) {\n  var str,\n    x = this,\n    Ctor = x.constructor;\n  if (dp === void 0) {\n    str = finiteToString(x, true);\n  } else {\n    checkInt32(dp, 0, MAX_DIGITS);\n    if (rm === void 0) rm = Ctor.rounding;else checkInt32(rm, 0, 8);\n    x = finalise(new Ctor(x), dp + 1, rm);\n    str = finiteToString(x, true, dp + 1);\n  }\n  return x.isNeg() && !x.isZero() ? \"-\" + str : str;\n};\nP.toFixed = function (dp, rm) {\n  var str,\n    y,\n    x = this,\n    Ctor = x.constructor;\n  if (dp === void 0) {\n    str = finiteToString(x);\n  } else {\n    checkInt32(dp, 0, MAX_DIGITS);\n    if (rm === void 0) rm = Ctor.rounding;else checkInt32(rm, 0, 8);\n    y = finalise(new Ctor(x), dp + x.e + 1, rm);\n    str = finiteToString(y, false, dp + y.e + 1);\n  }\n  return x.isNeg() && !x.isZero() ? \"-\" + str : str;\n};\nP.toFraction = function (maxD) {\n  var d,\n    d0,\n    d1,\n    d2,\n    e,\n    k,\n    n,\n    n0,\n    n1,\n    pr,\n    q,\n    r,\n    x = this,\n    xd = x.d,\n    Ctor = x.constructor;\n  if (!xd) return new Ctor(x);\n  n1 = d0 = new Ctor(1);\n  d1 = n0 = new Ctor(0);\n  d = new Ctor(d1);\n  e = d.e = getPrecision(xd) - x.e - 1;\n  k = e % LOG_BASE;\n  d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\n  if (maxD == null) {\n    maxD = e > 0 ? d : n1;\n  } else {\n    n = new Ctor(maxD);\n    if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\n    maxD = n.gt(d) ? e > 0 ? d : n1 : n;\n  }\n  external = false;\n  n = new Ctor(digitsToString(xd));\n  pr = Ctor.precision;\n  Ctor.precision = e = xd.length * LOG_BASE * 2;\n  for (;;) {\n    q = divide(n, d, 0, 1, 1);\n    d2 = d0.plus(q.times(d1));\n    if (d2.cmp(maxD) == 1) break;\n    d0 = d1;\n    d1 = d2;\n    d2 = n1;\n    n1 = n0.plus(q.times(d2));\n    n0 = d2;\n    d2 = d;\n    d = n.minus(q.times(d2));\n    n = d2;\n  }\n  d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\n  n0 = n0.plus(d2.times(n1));\n  d0 = d0.plus(d2.times(d1));\n  n0.s = n1.s = x.s;\n  r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\n  Ctor.precision = pr;\n  external = true;\n  return r;\n};\nP.toHexadecimal = P.toHex = function (sd, rm) {\n  return toStringBinary(this, 16, sd, rm);\n};\nP.toNearest = function (y, rm) {\n  var x = this,\n    Ctor = x.constructor;\n  x = new Ctor(x);\n  if (y == null) {\n    if (!x.d) return x;\n    y = new Ctor(1);\n    rm = Ctor.rounding;\n  } else {\n    y = new Ctor(y);\n    if (rm === void 0) {\n      rm = Ctor.rounding;\n    } else {\n      checkInt32(rm, 0, 8);\n    }\n    if (!x.d) return y.s ? x : y;\n    if (!y.d) {\n      if (y.s) y.s = x.s;\n      return y;\n    }\n  }\n  if (y.d[0]) {\n    external = false;\n    x = divide(x, y, 0, rm, 1).times(y);\n    external = true;\n    finalise(x);\n  } else {\n    y.s = x.s;\n    x = y;\n  }\n  return x;\n};\nP.toNumber = function () {\n  return +this;\n};\nP.toOctal = function (sd, rm) {\n  return toStringBinary(this, 8, sd, rm);\n};\nP.toPower = P.pow = function (y) {\n  var e,\n    k,\n    pr,\n    r,\n    rm,\n    s,\n    x = this,\n    Ctor = x.constructor,\n    yn = +(y = new Ctor(y));\n  if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\n  x = new Ctor(x);\n  if (x.eq(1)) return x;\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  if (y.eq(1)) return finalise(x, pr, rm);\n  e = mathfloor(y.e / LOG_BASE);\n  if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\n    r = intPow(Ctor, x, k, pr);\n    return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\n  }\n  s = x.s;\n  if (s < 0) {\n    if (e < y.d.length - 1) return new Ctor(NaN);\n    if ((y.d[e] & 1) == 0) s = 1;\n    if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\n      x.s = s;\n      return x;\n    }\n  }\n  k = mathpow(+x, yn);\n  e = k == 0 || !isFinite(k) ? mathfloor(yn * (Math.log(\"0.\" + digitsToString(x.d)) / Math.LN10 + x.e + 1)) : new Ctor(k + \"\").e;\n  if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\n  external = false;\n  Ctor.rounding = x.s = 1;\n  k = Math.min(12, (e + \"\").length);\n  r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\n  if (r.d) {\n    r = finalise(r, pr + 5, 1);\n    if (checkRoundingDigits(r.d, pr, rm)) {\n      e = pr + 10;\n      r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\n      if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\n        r = finalise(r, pr + 1, 0);\n      }\n    }\n  }\n  r.s = s;\n  external = true;\n  Ctor.rounding = rm;\n  return finalise(r, pr, rm);\n};\nP.toPrecision = function (sd, rm) {\n  var str,\n    x = this,\n    Ctor = x.constructor;\n  if (sd === void 0) {\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n  } else {\n    checkInt32(sd, 1, MAX_DIGITS);\n    if (rm === void 0) rm = Ctor.rounding;else checkInt32(rm, 0, 8);\n    x = finalise(new Ctor(x), sd, rm);\n    str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\n  }\n  return x.isNeg() && !x.isZero() ? \"-\" + str : str;\n};\nP.toSignificantDigits = P.toSD = function (sd, rm) {\n  var x = this,\n    Ctor = x.constructor;\n  if (sd === void 0) {\n    sd = Ctor.precision;\n    rm = Ctor.rounding;\n  } else {\n    checkInt32(sd, 1, MAX_DIGITS);\n    if (rm === void 0) rm = Ctor.rounding;else checkInt32(rm, 0, 8);\n  }\n  return finalise(new Ctor(x), sd, rm);\n};\nP.toString = function () {\n  var x = this,\n    Ctor = x.constructor,\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n  return x.isNeg() && !x.isZero() ? \"-\" + str : str;\n};\nP.truncated = P.trunc = function () {\n  return finalise(new this.constructor(this), this.e + 1, 1);\n};\nP.valueOf = P.toJSON = function () {\n  var x = this,\n    Ctor = x.constructor,\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n  return x.isNeg() ? \"-\" + str : str;\n};\nfunction digitsToString(d) {\n  var i,\n    k,\n    ws,\n    indexOfLastWord = d.length - 1,\n    str = \"\",\n    w = d[0];\n  if (indexOfLastWord > 0) {\n    str += w;\n    for (i = 1; i < indexOfLastWord; i++) {\n      ws = d[i] + \"\";\n      k = LOG_BASE - ws.length;\n      if (k) str += getZeroString(k);\n      str += ws;\n    }\n    w = d[i];\n    ws = w + \"\";\n    k = LOG_BASE - ws.length;\n    if (k) str += getZeroString(k);\n  } else if (w === 0) {\n    return \"0\";\n  }\n  for (; w % 10 === 0;) w /= 10;\n  return str + w;\n}\n__name(digitsToString, \"digitsToString\");\nfunction checkInt32(i, min2, max2) {\n  if (i !== ~~i || i < min2 || i > max2) {\n    throw Error(invalidArgument + i);\n  }\n}\n__name(checkInt32, \"checkInt32\");\nfunction checkRoundingDigits(d, i, rm, repeating) {\n  var di, k, r, rd;\n  for (k = d[0]; k >= 10; k /= 10) --i;\n  if (--i < 0) {\n    i += LOG_BASE;\n    di = 0;\n  } else {\n    di = Math.ceil((i + 1) / LOG_BASE);\n    i %= LOG_BASE;\n  }\n  k = mathpow(10, LOG_BASE - i);\n  rd = d[di] % k | 0;\n  if (repeating == null) {\n    if (i < 3) {\n      if (i == 0) rd = rd / 100 | 0;else if (i == 1) rd = rd / 10 | 0;\n      r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 5e4 || rd == 0;\n    } else {\n      r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) && (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 || (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\n    }\n  } else {\n    if (i < 4) {\n      if (i == 0) rd = rd / 1e3 | 0;else if (i == 1) rd = rd / 100 | 0;else if (i == 2) rd = rd / 10 | 0;\n      r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\n    } else {\n      r = ((repeating || rm < 4) && rd + 1 == k || !repeating && rm > 3 && rd + 1 == k / 2) && (d[di + 1] / k / 1e3 | 0) == mathpow(10, i - 3) - 1;\n    }\n  }\n  return r;\n}\n__name(checkRoundingDigits, \"checkRoundingDigits\");\nfunction convertBase(str, baseIn, baseOut) {\n  var j,\n    arr = [0],\n    arrL,\n    i = 0,\n    strL = str.length;\n  for (; i < strL;) {\n    for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\n    arr[0] += NUMERALS.indexOf(str.charAt(i++));\n    for (j = 0; j < arr.length; j++) {\n      if (arr[j] > baseOut - 1) {\n        if (arr[j + 1] === void 0) arr[j + 1] = 0;\n        arr[j + 1] += arr[j] / baseOut | 0;\n        arr[j] %= baseOut;\n      }\n    }\n  }\n  return arr.reverse();\n}\n__name(convertBase, \"convertBase\");\nfunction cosine(Ctor, x) {\n  var k, len, y;\n  if (x.isZero()) return x;\n  len = x.d.length;\n  if (len < 32) {\n    k = Math.ceil(len / 3);\n    y = (1 / tinyPow(4, k)).toString();\n  } else {\n    k = 16;\n    y = \"2.3283064365386962890625e-10\";\n  }\n  Ctor.precision += k;\n  x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\n  for (var i = k; i--;) {\n    var cos2x = x.times(x);\n    x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\n  }\n  Ctor.precision -= k;\n  return x;\n}\n__name(cosine, \"cosine\");\nvar divide = function () {\n  function multiplyInteger(x, k, base) {\n    var temp,\n      carry = 0,\n      i = x.length;\n    for (x = x.slice(); i--;) {\n      temp = x[i] * k + carry;\n      x[i] = temp % base | 0;\n      carry = temp / base | 0;\n    }\n    if (carry) x.unshift(carry);\n    return x;\n  }\n  __name(multiplyInteger, \"multiplyInteger\");\n  function compare(a, b, aL, bL) {\n    var i, r;\n    if (aL != bL) {\n      r = aL > bL ? 1 : -1;\n    } else {\n      for (i = r = 0; i < aL; i++) {\n        if (a[i] != b[i]) {\n          r = a[i] > b[i] ? 1 : -1;\n          break;\n        }\n      }\n    }\n    return r;\n  }\n  __name(compare, \"compare\");\n  function subtract(a, b, aL, base) {\n    var i = 0;\n    for (; aL--;) {\n      a[aL] -= i;\n      i = a[aL] < b[aL] ? 1 : 0;\n      a[aL] = i * base + a[aL] - b[aL];\n    }\n    for (; !a[0] && a.length > 1;) a.shift();\n  }\n  __name(subtract, \"subtract\");\n  return function (x, y, pr, rm, dp, base) {\n    var cmp,\n      e,\n      i,\n      k,\n      logBase,\n      more,\n      prod,\n      prodL,\n      q,\n      qd,\n      rem,\n      remL,\n      rem0,\n      sd,\n      t,\n      xi,\n      xL,\n      yd0,\n      yL,\n      yz,\n      Ctor = x.constructor,\n      sign2 = x.s == y.s ? 1 : -1,\n      xd = x.d,\n      yd = y.d;\n    if (!xd || !xd[0] || !yd || !yd[0]) {\n      return new Ctor(!x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN : xd && xd[0] == 0 || !yd ? sign2 * 0 : sign2 / 0);\n    }\n    if (base) {\n      logBase = 1;\n      e = x.e - y.e;\n    } else {\n      base = BASE;\n      logBase = LOG_BASE;\n      e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\n    }\n    yL = yd.length;\n    xL = xd.length;\n    q = new Ctor(sign2);\n    qd = q.d = [];\n    for (i = 0; yd[i] == (xd[i] || 0); i++);\n    if (yd[i] > (xd[i] || 0)) e--;\n    if (pr == null) {\n      sd = pr = Ctor.precision;\n      rm = Ctor.rounding;\n    } else if (dp) {\n      sd = pr + (x.e - y.e) + 1;\n    } else {\n      sd = pr;\n    }\n    if (sd < 0) {\n      qd.push(1);\n      more = true;\n    } else {\n      sd = sd / logBase + 2 | 0;\n      i = 0;\n      if (yL == 1) {\n        k = 0;\n        yd = yd[0];\n        sd++;\n        for (; (i < xL || k) && sd--; i++) {\n          t = k * base + (xd[i] || 0);\n          qd[i] = t / yd | 0;\n          k = t % yd | 0;\n        }\n        more = k || i < xL;\n      } else {\n        k = base / (yd[0] + 1) | 0;\n        if (k > 1) {\n          yd = multiplyInteger(yd, k, base);\n          xd = multiplyInteger(xd, k, base);\n          yL = yd.length;\n          xL = xd.length;\n        }\n        xi = yL;\n        rem = xd.slice(0, yL);\n        remL = rem.length;\n        for (; remL < yL;) rem[remL++] = 0;\n        yz = yd.slice();\n        yz.unshift(0);\n        yd0 = yd[0];\n        if (yd[1] >= base / 2) ++yd0;\n        do {\n          k = 0;\n          cmp = compare(yd, rem, yL, remL);\n          if (cmp < 0) {\n            rem0 = rem[0];\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\n            k = rem0 / yd0 | 0;\n            if (k > 1) {\n              if (k >= base) k = base - 1;\n              prod = multiplyInteger(yd, k, base);\n              prodL = prod.length;\n              remL = rem.length;\n              cmp = compare(prod, rem, prodL, remL);\n              if (cmp == 1) {\n                k--;\n                subtract(prod, yL < prodL ? yz : yd, prodL, base);\n              }\n            } else {\n              if (k == 0) cmp = k = 1;\n              prod = yd.slice();\n            }\n            prodL = prod.length;\n            if (prodL < remL) prod.unshift(0);\n            subtract(rem, prod, remL, base);\n            if (cmp == -1) {\n              remL = rem.length;\n              cmp = compare(yd, rem, yL, remL);\n              if (cmp < 1) {\n                k++;\n                subtract(rem, yL < remL ? yz : yd, remL, base);\n              }\n            }\n            remL = rem.length;\n          } else if (cmp === 0) {\n            k++;\n            rem = [0];\n          }\n          qd[i++] = k;\n          if (cmp && rem[0]) {\n            rem[remL++] = xd[xi] || 0;\n          } else {\n            rem = [xd[xi]];\n            remL = 1;\n          }\n        } while ((xi++ < xL || rem[0] !== void 0) && sd--);\n        more = rem[0] !== void 0;\n      }\n      if (!qd[0]) qd.shift();\n    }\n    if (logBase == 1) {\n      q.e = e;\n      inexact = more;\n    } else {\n      for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\n      q.e = i + e * logBase - 1;\n      finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\n    }\n    return q;\n  };\n}();\nfunction finalise(x, sd, rm, isTruncated) {\n  var digits,\n    i,\n    j,\n    k,\n    rd,\n    roundUp,\n    w,\n    xd,\n    xdi,\n    Ctor = x.constructor;\n  out: if (sd != null) {\n    xd = x.d;\n    if (!xd) return x;\n    for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\n    i = sd - digits;\n    if (i < 0) {\n      i += LOG_BASE;\n      j = sd;\n      w = xd[xdi = 0];\n      rd = w / mathpow(10, digits - j - 1) % 10 | 0;\n    } else {\n      xdi = Math.ceil((i + 1) / LOG_BASE);\n      k = xd.length;\n      if (xdi >= k) {\n        if (isTruncated) {\n          for (; k++ <= xdi;) xd.push(0);\n          w = rd = 0;\n          digits = 1;\n          i %= LOG_BASE;\n          j = i - LOG_BASE + 1;\n        } else {\n          break out;\n        }\n      } else {\n        w = k = xd[xdi];\n        for (digits = 1; k >= 10; k /= 10) digits++;\n        i %= LOG_BASE;\n        j = i - LOG_BASE + digits;\n        rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\n      }\n    }\n    isTruncated = isTruncated || sd < 0 || xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\n    roundUp = rm < 4 ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 && (i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));\n    if (sd < 1 || !xd[0]) {\n      xd.length = 0;\n      if (roundUp) {\n        sd -= x.e + 1;\n        xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\n        x.e = -sd || 0;\n      } else {\n        xd[0] = x.e = 0;\n      }\n      return x;\n    }\n    if (i == 0) {\n      xd.length = xdi;\n      k = 1;\n      xdi--;\n    } else {\n      xd.length = xdi + 1;\n      k = mathpow(10, LOG_BASE - i);\n      xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\n    }\n    if (roundUp) {\n      for (;;) {\n        if (xdi == 0) {\n          for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\n          j = xd[0] += k;\n          for (k = 1; j >= 10; j /= 10) k++;\n          if (i != k) {\n            x.e++;\n            if (xd[0] == BASE) xd[0] = 1;\n          }\n          break;\n        } else {\n          xd[xdi] += k;\n          if (xd[xdi] != BASE) break;\n          xd[xdi--] = 0;\n          k = 1;\n        }\n      }\n    }\n    for (i = xd.length; xd[--i] === 0;) xd.pop();\n  }\n  if (external) {\n    if (x.e > Ctor.maxE) {\n      x.d = null;\n      x.e = NaN;\n    } else if (x.e < Ctor.minE) {\n      x.e = 0;\n      x.d = [0];\n    }\n  }\n  return x;\n}\n__name(finalise, \"finalise\");\nfunction finiteToString(x, isExp, sd) {\n  if (!x.isFinite()) return nonFiniteToString(x);\n  var k,\n    e = x.e,\n    str = digitsToString(x.d),\n    len = str.length;\n  if (isExp) {\n    if (sd && (k = sd - len) > 0) {\n      str = str.charAt(0) + \".\" + str.slice(1) + getZeroString(k);\n    } else if (len > 1) {\n      str = str.charAt(0) + \".\" + str.slice(1);\n    }\n    str = str + (x.e < 0 ? \"e\" : \"e+\") + x.e;\n  } else if (e < 0) {\n    str = \"0.\" + getZeroString(-e - 1) + str;\n    if (sd && (k = sd - len) > 0) str += getZeroString(k);\n  } else if (e >= len) {\n    str += getZeroString(e + 1 - len);\n    if (sd && (k = sd - e - 1) > 0) str = str + \".\" + getZeroString(k);\n  } else {\n    if ((k = e + 1) < len) str = str.slice(0, k) + \".\" + str.slice(k);\n    if (sd && (k = sd - len) > 0) {\n      if (e + 1 === len) str += \".\";\n      str += getZeroString(k);\n    }\n  }\n  return str;\n}\n__name(finiteToString, \"finiteToString\");\nfunction getBase10Exponent(digits, e) {\n  var w = digits[0];\n  for (e *= LOG_BASE; w >= 10; w /= 10) e++;\n  return e;\n}\n__name(getBase10Exponent, \"getBase10Exponent\");\nfunction getLn10(Ctor, sd, pr) {\n  if (sd > LN10_PRECISION) {\n    external = true;\n    if (pr) Ctor.precision = pr;\n    throw Error(precisionLimitExceeded);\n  }\n  return finalise(new Ctor(LN10), sd, 1, true);\n}\n__name(getLn10, \"getLn10\");\nfunction getPi(Ctor, sd, rm) {\n  if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\n  return finalise(new Ctor(PI), sd, rm, true);\n}\n__name(getPi, \"getPi\");\nfunction getPrecision(digits) {\n  var w = digits.length - 1,\n    len = w * LOG_BASE + 1;\n  w = digits[w];\n  if (w) {\n    for (; w % 10 == 0; w /= 10) len--;\n    for (w = digits[0]; w >= 10; w /= 10) len++;\n  }\n  return len;\n}\n__name(getPrecision, \"getPrecision\");\nfunction getZeroString(k) {\n  var zs = \"\";\n  for (; k--;) zs += \"0\";\n  return zs;\n}\n__name(getZeroString, \"getZeroString\");\nfunction intPow(Ctor, x, n, pr) {\n  var isTruncated,\n    r = new Ctor(1),\n    k = Math.ceil(pr / LOG_BASE + 4);\n  external = false;\n  for (;;) {\n    if (n % 2) {\n      r = r.times(x);\n      if (truncate(r.d, k)) isTruncated = true;\n    }\n    n = mathfloor(n / 2);\n    if (n === 0) {\n      n = r.d.length - 1;\n      if (isTruncated && r.d[n] === 0) ++r.d[n];\n      break;\n    }\n    x = x.times(x);\n    truncate(x.d, k);\n  }\n  external = true;\n  return r;\n}\n__name(intPow, \"intPow\");\nfunction isOdd(n) {\n  return n.d[n.d.length - 1] & 1;\n}\n__name(isOdd, \"isOdd\");\nfunction maxOrMin(Ctor, args, ltgt) {\n  var y,\n    x = new Ctor(args[0]),\n    i = 0;\n  for (; ++i < args.length;) {\n    y = new Ctor(args[i]);\n    if (!y.s) {\n      x = y;\n      break;\n    } else if (x[ltgt](y)) {\n      x = y;\n    }\n  }\n  return x;\n}\n__name(maxOrMin, \"maxOrMin\");\nfunction naturalExponential(x, sd) {\n  var denominator,\n    guard,\n    j,\n    pow2,\n    sum2,\n    t,\n    wpr,\n    rep = 0,\n    i = 0,\n    k = 0,\n    Ctor = x.constructor,\n    rm = Ctor.rounding,\n    pr = Ctor.precision;\n  if (!x.d || !x.d[0] || x.e > 17) {\n    return new Ctor(x.d ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0 : x.s ? x.s < 0 ? 0 : x : 0 / 0);\n  }\n  if (sd == null) {\n    external = false;\n    wpr = pr;\n  } else {\n    wpr = sd;\n  }\n  t = new Ctor(0.03125);\n  while (x.e > -2) {\n    x = x.times(t);\n    k += 5;\n  }\n  guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\n  wpr += guard;\n  denominator = pow2 = sum2 = new Ctor(1);\n  Ctor.precision = wpr;\n  for (;;) {\n    pow2 = finalise(pow2.times(x), wpr, 1);\n    denominator = denominator.times(++i);\n    t = sum2.plus(divide(pow2, denominator, wpr, 1));\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum2.d).slice(0, wpr)) {\n      j = k;\n      while (j--) sum2 = finalise(sum2.times(sum2), wpr, 1);\n      if (sd == null) {\n        if (rep < 3 && checkRoundingDigits(sum2.d, wpr - guard, rm, rep)) {\n          Ctor.precision = wpr += 10;\n          denominator = pow2 = t = new Ctor(1);\n          i = 0;\n          rep++;\n        } else {\n          return finalise(sum2, Ctor.precision = pr, rm, external = true);\n        }\n      } else {\n        Ctor.precision = pr;\n        return sum2;\n      }\n    }\n    sum2 = t;\n  }\n}\n__name(naturalExponential, \"naturalExponential\");\nfunction naturalLogarithm(y, sd) {\n  var c,\n    c0,\n    denominator,\n    e,\n    numerator,\n    rep,\n    sum2,\n    t,\n    wpr,\n    x1,\n    x2,\n    n = 1,\n    guard = 10,\n    x = y,\n    xd = x.d,\n    Ctor = x.constructor,\n    rm = Ctor.rounding,\n    pr = Ctor.precision;\n  if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\n    return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\n  }\n  if (sd == null) {\n    external = false;\n    wpr = pr;\n  } else {\n    wpr = sd;\n  }\n  Ctor.precision = wpr += guard;\n  c = digitsToString(xd);\n  c0 = c.charAt(0);\n  if (Math.abs(e = x.e) < 15e14) {\n    while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\n      x = x.times(y);\n      c = digitsToString(x.d);\n      c0 = c.charAt(0);\n      n++;\n    }\n    e = x.e;\n    if (c0 > 1) {\n      x = new Ctor(\"0.\" + c);\n      e++;\n    } else {\n      x = new Ctor(c0 + \".\" + c.slice(1));\n    }\n  } else {\n    t = getLn10(Ctor, wpr + 2, pr).times(e + \"\");\n    x = naturalLogarithm(new Ctor(c0 + \".\" + c.slice(1)), wpr - guard).plus(t);\n    Ctor.precision = pr;\n    return sd == null ? finalise(x, pr, rm, external = true) : x;\n  }\n  x1 = x;\n  sum2 = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\n  x2 = finalise(x.times(x), wpr, 1);\n  denominator = 3;\n  for (;;) {\n    numerator = finalise(numerator.times(x2), wpr, 1);\n    t = sum2.plus(divide(numerator, new Ctor(denominator), wpr, 1));\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum2.d).slice(0, wpr)) {\n      sum2 = sum2.times(2);\n      if (e !== 0) sum2 = sum2.plus(getLn10(Ctor, wpr + 2, pr).times(e + \"\"));\n      sum2 = divide(sum2, new Ctor(n), wpr, 1);\n      if (sd == null) {\n        if (checkRoundingDigits(sum2.d, wpr - guard, rm, rep)) {\n          Ctor.precision = wpr += guard;\n          t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\n          x2 = finalise(x.times(x), wpr, 1);\n          denominator = rep = 1;\n        } else {\n          return finalise(sum2, Ctor.precision = pr, rm, external = true);\n        }\n      } else {\n        Ctor.precision = pr;\n        return sum2;\n      }\n    }\n    sum2 = t;\n    denominator += 2;\n  }\n}\n__name(naturalLogarithm, \"naturalLogarithm\");\nfunction nonFiniteToString(x) {\n  return String(x.s * x.s / 0);\n}\n__name(nonFiniteToString, \"nonFiniteToString\");\nfunction parseDecimal(x, str) {\n  var e, i, len;\n  if ((e = str.indexOf(\".\")) > -1) str = str.replace(\".\", \"\");\n  if ((i = str.search(/e/i)) > 0) {\n    if (e < 0) e = i;\n    e += +str.slice(i + 1);\n    str = str.substring(0, i);\n  } else if (e < 0) {\n    e = str.length;\n  }\n  for (i = 0; str.charCodeAt(i) === 48; i++);\n  for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\n  str = str.slice(i, len);\n  if (str) {\n    len -= i;\n    x.e = e = e - i - 1;\n    x.d = [];\n    i = (e + 1) % LOG_BASE;\n    if (e < 0) i += LOG_BASE;\n    if (i < len) {\n      if (i) x.d.push(+str.slice(0, i));\n      for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\n      str = str.slice(i);\n      i = LOG_BASE - str.length;\n    } else {\n      i -= len;\n    }\n    for (; i--;) str += \"0\";\n    x.d.push(+str);\n    if (external) {\n      if (x.e > x.constructor.maxE) {\n        x.d = null;\n        x.e = NaN;\n      } else if (x.e < x.constructor.minE) {\n        x.e = 0;\n        x.d = [0];\n      }\n    }\n  } else {\n    x.e = 0;\n    x.d = [0];\n  }\n  return x;\n}\n__name(parseDecimal, \"parseDecimal\");\nfunction parseOther(x, str) {\n  var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\n  if (str.indexOf(\"_\") > -1) {\n    str = str.replace(/(\\d)_(?=\\d)/g, \"$1\");\n    if (isDecimal.test(str)) return parseDecimal(x, str);\n  } else if (str === \"Infinity\" || str === \"NaN\") {\n    if (!+str) x.s = NaN;\n    x.e = NaN;\n    x.d = null;\n    return x;\n  }\n  if (isHex.test(str)) {\n    base = 16;\n    str = str.toLowerCase();\n  } else if (isBinary.test(str)) {\n    base = 2;\n  } else if (isOctal.test(str)) {\n    base = 8;\n  } else {\n    throw Error(invalidArgument + str);\n  }\n  i = str.search(/p/i);\n  if (i > 0) {\n    p = +str.slice(i + 1);\n    str = str.substring(2, i);\n  } else {\n    str = str.slice(2);\n  }\n  i = str.indexOf(\".\");\n  isFloat = i >= 0;\n  Ctor = x.constructor;\n  if (isFloat) {\n    str = str.replace(\".\", \"\");\n    len = str.length;\n    i = len - i;\n    divisor = intPow(Ctor, new Ctor(base), i, i * 2);\n  }\n  xd = convertBase(str, base, BASE);\n  xe = xd.length - 1;\n  for (i = xe; xd[i] === 0; --i) xd.pop();\n  if (i < 0) return new Ctor(x.s * 0);\n  x.e = getBase10Exponent(xd, xe);\n  x.d = xd;\n  external = false;\n  if (isFloat) x = divide(x, divisor, len * 4);\n  if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\n  external = true;\n  return x;\n}\n__name(parseOther, \"parseOther\");\nfunction sine(Ctor, x) {\n  var k,\n    len = x.d.length;\n  if (len < 3) {\n    return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\n  }\n  k = 1.4 * Math.sqrt(len);\n  k = k > 16 ? 16 : k | 0;\n  x = x.times(1 / tinyPow(5, k));\n  x = taylorSeries(Ctor, 2, x, x);\n  var sin2_x,\n    d5 = new Ctor(5),\n    d16 = new Ctor(16),\n    d20 = new Ctor(20);\n  for (; k--;) {\n    sin2_x = x.times(x);\n    x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\n  }\n  return x;\n}\n__name(sine, \"sine\");\nfunction taylorSeries(Ctor, n, x, y, isHyperbolic) {\n  var j,\n    t,\n    u,\n    x2,\n    i = 1,\n    pr = Ctor.precision,\n    k = Math.ceil(pr / LOG_BASE);\n  external = false;\n  x2 = x.times(x);\n  u = new Ctor(y);\n  for (;;) {\n    t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\n    u = isHyperbolic ? y.plus(t) : y.minus(t);\n    y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\n    t = u.plus(y);\n    if (t.d[k] !== void 0) {\n      for (j = k; t.d[j] === u.d[j] && j--;);\n      if (j == -1) break;\n    }\n    j = u;\n    u = y;\n    y = t;\n    t = j;\n    i++;\n  }\n  external = true;\n  t.d.length = k + 1;\n  return t;\n}\n__name(taylorSeries, \"taylorSeries\");\nfunction tinyPow(b, e) {\n  var n = b;\n  while (--e) n *= b;\n  return n;\n}\n__name(tinyPow, \"tinyPow\");\nfunction toLessThanHalfPi(Ctor, x) {\n  var t,\n    isNeg = x.s < 0,\n    pi = getPi(Ctor, Ctor.precision, 1),\n    halfPi = pi.times(0.5);\n  x = x.abs();\n  if (x.lte(halfPi)) {\n    quadrant = isNeg ? 4 : 1;\n    return x;\n  }\n  t = x.divToInt(pi);\n  if (t.isZero()) {\n    quadrant = isNeg ? 3 : 2;\n  } else {\n    x = x.minus(t.times(pi));\n    if (x.lte(halfPi)) {\n      quadrant = isOdd(t) ? isNeg ? 2 : 3 : isNeg ? 4 : 1;\n      return x;\n    }\n    quadrant = isOdd(t) ? isNeg ? 1 : 4 : isNeg ? 3 : 2;\n  }\n  return x.minus(pi).abs();\n}\n__name(toLessThanHalfPi, \"toLessThanHalfPi\");\nfunction toStringBinary(x, baseOut, sd, rm) {\n  var base,\n    e,\n    i,\n    k,\n    len,\n    roundUp,\n    str,\n    xd,\n    y,\n    Ctor = x.constructor,\n    isExp = sd !== void 0;\n  if (isExp) {\n    checkInt32(sd, 1, MAX_DIGITS);\n    if (rm === void 0) rm = Ctor.rounding;else checkInt32(rm, 0, 8);\n  } else {\n    sd = Ctor.precision;\n    rm = Ctor.rounding;\n  }\n  if (!x.isFinite()) {\n    str = nonFiniteToString(x);\n  } else {\n    str = finiteToString(x);\n    i = str.indexOf(\".\");\n    if (isExp) {\n      base = 2;\n      if (baseOut == 16) {\n        sd = sd * 4 - 3;\n      } else if (baseOut == 8) {\n        sd = sd * 3 - 2;\n      }\n    } else {\n      base = baseOut;\n    }\n    if (i >= 0) {\n      str = str.replace(\".\", \"\");\n      y = new Ctor(1);\n      y.e = str.length - i;\n      y.d = convertBase(finiteToString(y), 10, base);\n      y.e = y.d.length;\n    }\n    xd = convertBase(str, 10, base);\n    e = len = xd.length;\n    for (; xd[--len] == 0;) xd.pop();\n    if (!xd[0]) {\n      str = isExp ? \"0p+0\" : \"0\";\n    } else {\n      if (i < 0) {\n        e--;\n      } else {\n        x = new Ctor(x);\n        x.d = xd;\n        x.e = e;\n        x = divide(x, y, sd, rm, 0, base);\n        xd = x.d;\n        e = x.e;\n        roundUp = inexact;\n      }\n      i = xd[sd];\n      k = base / 2;\n      roundUp = roundUp || xd[sd + 1] !== void 0;\n      roundUp = rm < 4 ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2)) : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 || rm === (x.s < 0 ? 8 : 7));\n      xd.length = sd;\n      if (roundUp) {\n        for (; ++xd[--sd] > base - 1;) {\n          xd[sd] = 0;\n          if (!sd) {\n            ++e;\n            xd.unshift(1);\n          }\n        }\n      }\n      for (len = xd.length; !xd[len - 1]; --len);\n      for (i = 0, str = \"\"; i < len; i++) str += NUMERALS.charAt(xd[i]);\n      if (isExp) {\n        if (len > 1) {\n          if (baseOut == 16 || baseOut == 8) {\n            i = baseOut == 16 ? 4 : 3;\n            for (--len; len % i; len++) str += \"0\";\n            xd = convertBase(str, base, baseOut);\n            for (len = xd.length; !xd[len - 1]; --len);\n            for (i = 1, str = \"1.\"; i < len; i++) str += NUMERALS.charAt(xd[i]);\n          } else {\n            str = str.charAt(0) + \".\" + str.slice(1);\n          }\n        }\n        str = str + (e < 0 ? \"p\" : \"p+\") + e;\n      } else if (e < 0) {\n        for (; ++e;) str = \"0\" + str;\n        str = \"0.\" + str;\n      } else {\n        if (++e > len) for (e -= len; e--;) str += \"0\";else if (e < len) str = str.slice(0, e) + \".\" + str.slice(e);\n      }\n    }\n    str = (baseOut == 16 ? \"0x\" : baseOut == 2 ? \"0b\" : baseOut == 8 ? \"0o\" : \"\") + str;\n  }\n  return x.s < 0 ? \"-\" + str : str;\n}\n__name(toStringBinary, \"toStringBinary\");\nfunction truncate(arr, len) {\n  if (arr.length > len) {\n    arr.length = len;\n    return true;\n  }\n}\n__name(truncate, \"truncate\");\nfunction abs(x) {\n  return new this(x).abs();\n}\n__name(abs, \"abs\");\nfunction acos(x) {\n  return new this(x).acos();\n}\n__name(acos, \"acos\");\nfunction acosh(x) {\n  return new this(x).acosh();\n}\n__name(acosh, \"acosh\");\nfunction add(x, y) {\n  return new this(x).plus(y);\n}\n__name(add, \"add\");\nfunction asin(x) {\n  return new this(x).asin();\n}\n__name(asin, \"asin\");\nfunction asinh(x) {\n  return new this(x).asinh();\n}\n__name(asinh, \"asinh\");\nfunction atan(x) {\n  return new this(x).atan();\n}\n__name(atan, \"atan\");\nfunction atanh(x) {\n  return new this(x).atanh();\n}\n__name(atanh, \"atanh\");\nfunction atan2(y, x) {\n  y = new this(y);\n  x = new this(x);\n  var r,\n    pr = this.precision,\n    rm = this.rounding,\n    wpr = pr + 4;\n  if (!y.s || !x.s) {\n    r = new this(NaN);\n  } else if (!y.d && !x.d) {\n    r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\n    r.s = y.s;\n  } else if (!x.d || y.isZero()) {\n    r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\n    r.s = y.s;\n  } else if (!y.d || x.isZero()) {\n    r = getPi(this, wpr, 1).times(0.5);\n    r.s = y.s;\n  } else if (x.s < 0) {\n    this.precision = wpr;\n    this.rounding = 1;\n    r = this.atan(divide(y, x, wpr, 1));\n    x = getPi(this, wpr, 1);\n    this.precision = pr;\n    this.rounding = rm;\n    r = y.s < 0 ? r.minus(x) : r.plus(x);\n  } else {\n    r = this.atan(divide(y, x, wpr, 1));\n  }\n  return r;\n}\n__name(atan2, \"atan2\");\nfunction cbrt(x) {\n  return new this(x).cbrt();\n}\n__name(cbrt, \"cbrt\");\nfunction ceil(x) {\n  return finalise(x = new this(x), x.e + 1, 2);\n}\n__name(ceil, \"ceil\");\nfunction clamp(x, min2, max2) {\n  return new this(x).clamp(min2, max2);\n}\n__name(clamp, \"clamp\");\nfunction config(obj) {\n  if (!obj || typeof obj !== \"object\") throw Error(decimalError + \"Object expected\");\n  var i,\n    p,\n    v,\n    useDefaults = obj.defaults === true,\n    ps = [\"precision\", 1, MAX_DIGITS, \"rounding\", 0, 8, \"toExpNeg\", -EXP_LIMIT, 0, \"toExpPos\", 0, EXP_LIMIT, \"maxE\", 0, EXP_LIMIT, \"minE\", -EXP_LIMIT, 0, \"modulo\", 0, 9];\n  for (i = 0; i < ps.length; i += 3) {\n    if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\n    if ((v = obj[p]) !== void 0) {\n      if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;else throw Error(invalidArgument + p + \": \" + v);\n    }\n  }\n  if (p = \"crypto\", useDefaults) this[p] = DEFAULTS[p];\n  if ((v = obj[p]) !== void 0) {\n    if (v === true || v === false || v === 0 || v === 1) {\n      if (v) {\n        if (typeof crypto != \"undefined\" && crypto && (crypto.getRandomValues || crypto.randomBytes)) {\n          this[p] = true;\n        } else {\n          throw Error(cryptoUnavailable);\n        }\n      } else {\n        this[p] = false;\n      }\n    } else {\n      throw Error(invalidArgument + p + \": \" + v);\n    }\n  }\n  return this;\n}\n__name(config, \"config\");\nfunction cos(x) {\n  return new this(x).cos();\n}\n__name(cos, \"cos\");\nfunction cosh(x) {\n  return new this(x).cosh();\n}\n__name(cosh, \"cosh\");\nfunction clone(obj) {\n  var i, p, ps;\n  function Decimal2(v) {\n    var e,\n      i2,\n      t,\n      x = this;\n    if (!(x instanceof Decimal2)) return new Decimal2(v);\n    x.constructor = Decimal2;\n    if (isDecimalInstance(v)) {\n      x.s = v.s;\n      if (external) {\n        if (!v.d || v.e > Decimal2.maxE) {\n          x.e = NaN;\n          x.d = null;\n        } else if (v.e < Decimal2.minE) {\n          x.e = 0;\n          x.d = [0];\n        } else {\n          x.e = v.e;\n          x.d = v.d.slice();\n        }\n      } else {\n        x.e = v.e;\n        x.d = v.d ? v.d.slice() : v.d;\n      }\n      return;\n    }\n    t = typeof v;\n    if (t === \"number\") {\n      if (v === 0) {\n        x.s = 1 / v < 0 ? -1 : 1;\n        x.e = 0;\n        x.d = [0];\n        return;\n      }\n      if (v < 0) {\n        v = -v;\n        x.s = -1;\n      } else {\n        x.s = 1;\n      }\n      if (v === ~~v && v < 1e7) {\n        for (e = 0, i2 = v; i2 >= 10; i2 /= 10) e++;\n        if (external) {\n          if (e > Decimal2.maxE) {\n            x.e = NaN;\n            x.d = null;\n          } else if (e < Decimal2.minE) {\n            x.e = 0;\n            x.d = [0];\n          } else {\n            x.e = e;\n            x.d = [v];\n          }\n        } else {\n          x.e = e;\n          x.d = [v];\n        }\n        return;\n      } else if (v * 0 !== 0) {\n        if (!v) x.s = NaN;\n        x.e = NaN;\n        x.d = null;\n        return;\n      }\n      return parseDecimal(x, v.toString());\n    } else if (t !== \"string\") {\n      throw Error(invalidArgument + v);\n    }\n    if ((i2 = v.charCodeAt(0)) === 45) {\n      v = v.slice(1);\n      x.s = -1;\n    } else {\n      if (i2 === 43) v = v.slice(1);\n      x.s = 1;\n    }\n    return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\n  }\n  __name(Decimal2, \"Decimal\");\n  Decimal2.prototype = P;\n  Decimal2.ROUND_UP = 0;\n  Decimal2.ROUND_DOWN = 1;\n  Decimal2.ROUND_CEIL = 2;\n  Decimal2.ROUND_FLOOR = 3;\n  Decimal2.ROUND_HALF_UP = 4;\n  Decimal2.ROUND_HALF_DOWN = 5;\n  Decimal2.ROUND_HALF_EVEN = 6;\n  Decimal2.ROUND_HALF_CEIL = 7;\n  Decimal2.ROUND_HALF_FLOOR = 8;\n  Decimal2.EUCLID = 9;\n  Decimal2.config = Decimal2.set = config;\n  Decimal2.clone = clone;\n  Decimal2.isDecimal = isDecimalInstance;\n  Decimal2.abs = abs;\n  Decimal2.acos = acos;\n  Decimal2.acosh = acosh;\n  Decimal2.add = add;\n  Decimal2.asin = asin;\n  Decimal2.asinh = asinh;\n  Decimal2.atan = atan;\n  Decimal2.atanh = atanh;\n  Decimal2.atan2 = atan2;\n  Decimal2.cbrt = cbrt;\n  Decimal2.ceil = ceil;\n  Decimal2.clamp = clamp;\n  Decimal2.cos = cos;\n  Decimal2.cosh = cosh;\n  Decimal2.div = div;\n  Decimal2.exp = exp;\n  Decimal2.floor = floor;\n  Decimal2.hypot = hypot;\n  Decimal2.ln = ln;\n  Decimal2.log = log;\n  Decimal2.log10 = log10;\n  Decimal2.log2 = log2;\n  Decimal2.max = max;\n  Decimal2.min = min;\n  Decimal2.mod = mod;\n  Decimal2.mul = mul;\n  Decimal2.pow = pow;\n  Decimal2.random = random;\n  Decimal2.round = round;\n  Decimal2.sign = sign;\n  Decimal2.sin = sin;\n  Decimal2.sinh = sinh;\n  Decimal2.sqrt = sqrt;\n  Decimal2.sub = sub;\n  Decimal2.sum = sum;\n  Decimal2.tan = tan;\n  Decimal2.tanh = tanh;\n  Decimal2.trunc = trunc;\n  if (obj === void 0) obj = {};\n  if (obj) {\n    if (obj.defaults !== true) {\n      ps = [\"precision\", \"rounding\", \"toExpNeg\", \"toExpPos\", \"maxE\", \"minE\", \"modulo\", \"crypto\"];\n      for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\n    }\n  }\n  Decimal2.config(obj);\n  return Decimal2;\n}\n__name(clone, \"clone\");\nfunction div(x, y) {\n  return new this(x).div(y);\n}\n__name(div, \"div\");\nfunction exp(x) {\n  return new this(x).exp();\n}\n__name(exp, \"exp\");\nfunction floor(x) {\n  return finalise(x = new this(x), x.e + 1, 3);\n}\n__name(floor, \"floor\");\nfunction hypot() {\n  var i,\n    n,\n    t = new this(0);\n  external = false;\n  for (i = 0; i < arguments.length;) {\n    n = new this(arguments[i++]);\n    if (!n.d) {\n      if (n.s) {\n        external = true;\n        return new this(1 / 0);\n      }\n      t = n;\n    } else if (t.d) {\n      t = t.plus(n.times(n));\n    }\n  }\n  external = true;\n  return t.sqrt();\n}\n__name(hypot, \"hypot\");\nfunction isDecimalInstance(obj) {\n  return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\n}\n__name(isDecimalInstance, \"isDecimalInstance\");\nfunction ln(x) {\n  return new this(x).ln();\n}\n__name(ln, \"ln\");\nfunction log(x, y) {\n  return new this(x).log(y);\n}\n__name(log, \"log\");\nfunction log2(x) {\n  return new this(x).log(2);\n}\n__name(log2, \"log2\");\nfunction log10(x) {\n  return new this(x).log(10);\n}\n__name(log10, \"log10\");\nfunction max() {\n  return maxOrMin(this, arguments, \"lt\");\n}\n__name(max, \"max\");\nfunction min() {\n  return maxOrMin(this, arguments, \"gt\");\n}\n__name(min, \"min\");\nfunction mod(x, y) {\n  return new this(x).mod(y);\n}\n__name(mod, \"mod\");\nfunction mul(x, y) {\n  return new this(x).mul(y);\n}\n__name(mul, \"mul\");\nfunction pow(x, y) {\n  return new this(x).pow(y);\n}\n__name(pow, \"pow\");\nfunction random(sd) {\n  var d,\n    e,\n    k,\n    n,\n    i = 0,\n    r = new this(1),\n    rd = [];\n  if (sd === void 0) sd = this.precision;else checkInt32(sd, 1, MAX_DIGITS);\n  k = Math.ceil(sd / LOG_BASE);\n  if (!this.crypto) {\n    for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\n  } else if (crypto.getRandomValues) {\n    d = crypto.getRandomValues(new Uint32Array(k));\n    for (; i < k;) {\n      n = d[i];\n      if (n >= 429e7) {\n        d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\n      } else {\n        rd[i++] = n % 1e7;\n      }\n    }\n  } else if (crypto.randomBytes) {\n    d = crypto.randomBytes(k *= 4);\n    for (; i < k;) {\n      n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 127) << 24);\n      if (n >= 214e7) {\n        crypto.randomBytes(4).copy(d, i);\n      } else {\n        rd.push(n % 1e7);\n        i += 4;\n      }\n    }\n    i = k / 4;\n  } else {\n    throw Error(cryptoUnavailable);\n  }\n  k = rd[--i];\n  sd %= LOG_BASE;\n  if (k && sd) {\n    n = mathpow(10, LOG_BASE - sd);\n    rd[i] = (k / n | 0) * n;\n  }\n  for (; rd[i] === 0; i--) rd.pop();\n  if (i < 0) {\n    e = 0;\n    rd = [0];\n  } else {\n    e = -1;\n    for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\n    for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\n    if (k < LOG_BASE) e -= LOG_BASE - k;\n  }\n  r.e = e;\n  r.d = rd;\n  return r;\n}\n__name(random, \"random\");\nfunction round(x) {\n  return finalise(x = new this(x), x.e + 1, this.rounding);\n}\n__name(round, \"round\");\nfunction sign(x) {\n  x = new this(x);\n  return x.d ? x.d[0] ? x.s : 0 * x.s : x.s || NaN;\n}\n__name(sign, \"sign\");\nfunction sin(x) {\n  return new this(x).sin();\n}\n__name(sin, \"sin\");\nfunction sinh(x) {\n  return new this(x).sinh();\n}\n__name(sinh, \"sinh\");\nfunction sqrt(x) {\n  return new this(x).sqrt();\n}\n__name(sqrt, \"sqrt\");\nfunction sub(x, y) {\n  return new this(x).sub(y);\n}\n__name(sub, \"sub\");\nfunction sum() {\n  var i = 0,\n    args = arguments,\n    x = new this(args[i]);\n  external = false;\n  for (; x.s && ++i < args.length;) x = x.plus(args[i]);\n  external = true;\n  return finalise(x, this.precision, this.rounding);\n}\n__name(sum, \"sum\");\nfunction tan(x) {\n  return new this(x).tan();\n}\n__name(tan, \"tan\");\nfunction tanh(x) {\n  return new this(x).tanh();\n}\n__name(tanh, \"tanh\");\nfunction trunc(x) {\n  return finalise(x = new this(x), x.e + 1, 1);\n}\n__name(trunc, \"trunc\");\nP[Symbol.for(\"nodejs.util.inspect.custom\")] = P.toString;\nP[Symbol.toStringTag] = \"Decimal\";\nvar Decimal = P.constructor = clone(DEFAULTS);\nLN10 = new Decimal(LN10);\nPI = new Decimal(PI);\nvar decimal_default = Decimal;\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Decimal,\n  makeStrictEnum,\n  objectEnumValues\n});\n/*!\n *  decimal.js v10.4.3\n *  An arbitrary-precision Decimal type for JavaScript.\n *  https://github.com/MikeMcl/decimal.js\n *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\n *  MIT Licence\n */","map":{"version":3,"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__name","target","value","configurable","__export","all","name","get","enumerable","__copyProps","to","from","except","desc","key","call","__toCommonJS","mod2","index_browser_exports","Decimal","decimal_default","makeStrictEnum","objectEnumValues","module","exports","secret","Symbol","representations","WeakMap","ObjectEnumValue","constructor","arg","set","_getName","_getNamespace","toString","NullTypesEnumValue","DbNull","JsonNull","AnyNull","classes","instances","allowList","Set","iterator","toStringTag","isConcatSpreadable","toPrimitive","definition","Proxy","property","has","TypeError","String","EXP_LIMIT","MAX_DIGITS","NUMERALS","LN10","PI","DEFAULTS","precision","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","inexact","quadrant","external","decimalError","invalidArgument","precisionLimitExceeded","cryptoUnavailable","tag","mathfloor","Math","floor","mathpow","pow","isBinary","isHex","isOctal","isDecimal","BASE","LOG_BASE","MAX_SAFE_INTEGER","LN10_PRECISION","length","PI_PRECISION","P","absoluteValue","abs","x","s","finalise","ceil","e","clampedTo","clamp","min2","max2","k","Ctor","NaN","gt","Error","cmp","comparedTo","y","i","j","xdL","ydL","xd","d","yd","xs","ys","cosine","cos","pr","rm","max","sd","toLessThanHalfPi","neg","cubeRoot","cbrt","m","n","r","rep","t","t3","t3plusx","isFinite","isZero","digitsToString","toExponential","slice","indexOf","times","plus","divide","eq","charAt","decimalPlaces","dp","w","dividedBy","div","dividedToIntegerBy","divToInt","equals","greaterThan","greaterThanOrEqualTo","gte","hyperbolicCosine","cosh","len","one","tinyPow","taylorSeries","cosh2_x","d8","minus","hyperbolicSine","sinh","sqrt","sinh2_x","d5","d16","d20","hyperbolicTangent","tanh","inverseCosine","acos","halfPi","isNeg","getPi","asin","inverseHyperbolicCosine","acosh","lte","ln","inverseHyperbolicSine","asinh","inverseHyperbolicTangent","atanh","wpr","xsd","inverseSine","atan","inverseTangent","px","x2","min","isInteger","isInt","isNaN","isNegative","isPositive","isPos","lessThan","lt","lessThanOrEqualTo","logarithm","log","base","isBase10","denominator","inf","num","guard","naturalLogarithm","getLn10","checkRoundingDigits","sub","xe","xLTy","reverse","push","pop","shift","getBase10Exponent","mod","q","naturalExponential","exp","negated","add","carry","unshift","z","getPrecision","round","sine","sin","squareRoot","tangent","tan","mul","rL","toBinary","toStringBinary","toDecimalPlaces","toDP","checkInt32","str","finiteToString","toFixed","toFraction","maxD","d0","d1","d2","n0","n1","toHexadecimal","toHex","toNearest","toNumber","toOctal","toPower","yn","intPow","toPrecision","toSignificantDigits","toSD","truncated","trunc","valueOf","toJSON","ws","indexOfLastWord","getZeroString","repeating","di","rd","convertBase","baseIn","baseOut","arr","arrL","strL","cos2x","multiplyInteger","temp","compare","a","b","aL","bL","subtract","logBase","more","prod","prodL","qd","rem","remL","rem0","xi","xL","yd0","yL","yz","sign2","isTruncated","digits","roundUp","xdi","out","isExp","nonFiniteToString","zs","truncate","isOdd","maxOrMin","args","ltgt","pow2","sum2","c","c0","numerator","x1","parseDecimal","replace","search","substring","charCodeAt","parseOther","divisor","isFloat","p","test","toLowerCase","sin2_x","isHyperbolic","u","pi","atan2","config","obj","v","useDefaults","defaults","ps","getRandomValues","randomBytes","clone","Decimal2","i2","isDecimalInstance","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","hypot","log10","log2","random","sign","sum","arguments","Uint32Array","copy","for"],"sources":["/Users/bence/Desktop/angular-learning/kanban/server/node_modules/@prisma/client/runtime/index-browser.js"],"sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod2) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod2);\n\n// src/runtime/index-browser.ts\nvar index_browser_exports = {};\n__export(index_browser_exports, {\n  Decimal: () => decimal_default,\n  makeStrictEnum: () => makeStrictEnum,\n  objectEnumValues: () => objectEnumValues\n});\nmodule.exports = __toCommonJS(index_browser_exports);\n\n// src/runtime/object-enums.ts\nvar secret = Symbol();\nvar representations = /* @__PURE__ */ new WeakMap();\nvar ObjectEnumValue = class {\n  constructor(arg) {\n    if (arg === secret) {\n      representations.set(this, `Prisma.${this._getName()}`);\n    } else {\n      representations.set(this, `new Prisma.${this._getNamespace()}.${this._getName()}()`);\n    }\n  }\n  _getName() {\n    return this.constructor.name;\n  }\n  toString() {\n    return representations.get(this);\n  }\n};\n__name(ObjectEnumValue, \"ObjectEnumValue\");\nvar NullTypesEnumValue = class extends ObjectEnumValue {\n  _getNamespace() {\n    return \"NullTypes\";\n  }\n};\n__name(NullTypesEnumValue, \"NullTypesEnumValue\");\nvar DbNull = class extends NullTypesEnumValue {\n};\n__name(DbNull, \"DbNull\");\nvar JsonNull = class extends NullTypesEnumValue {\n};\n__name(JsonNull, \"JsonNull\");\nvar AnyNull = class extends NullTypesEnumValue {\n};\n__name(AnyNull, \"AnyNull\");\nvar objectEnumValues = {\n  classes: {\n    DbNull,\n    JsonNull,\n    AnyNull\n  },\n  instances: {\n    DbNull: new DbNull(secret),\n    JsonNull: new JsonNull(secret),\n    AnyNull: new AnyNull(secret)\n  }\n};\n\n// src/runtime/strictEnum.ts\nvar allowList = /* @__PURE__ */ new Set([\n  \"toJSON\",\n  \"asymmetricMatch\",\n  Symbol.iterator,\n  Symbol.toStringTag,\n  Symbol.isConcatSpreadable,\n  Symbol.toPrimitive\n]);\nfunction makeStrictEnum(definition) {\n  return new Proxy(definition, {\n    get(target, property) {\n      if (property in target) {\n        return target[property];\n      }\n      if (allowList.has(property)) {\n        return void 0;\n      }\n      throw new TypeError(`Invalid enum value: ${String(property)}`);\n    }\n  });\n}\n__name(makeStrictEnum, \"makeStrictEnum\");\n\n// ../../node_modules/.pnpm/decimal.js@10.4.3/node_modules/decimal.js/decimal.mjs\nvar EXP_LIMIT = 9e15;\nvar MAX_DIGITS = 1e9;\nvar NUMERALS = \"0123456789abcdef\";\nvar LN10 = \"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\";\nvar PI = \"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\";\nvar DEFAULTS = {\n  precision: 20,\n  rounding: 4,\n  modulo: 1,\n  toExpNeg: -7,\n  toExpPos: 21,\n  minE: -EXP_LIMIT,\n  maxE: EXP_LIMIT,\n  crypto: false\n};\nvar inexact;\nvar quadrant;\nvar external = true;\nvar decimalError = \"[DecimalError] \";\nvar invalidArgument = decimalError + \"Invalid argument: \";\nvar precisionLimitExceeded = decimalError + \"Precision limit exceeded\";\nvar cryptoUnavailable = decimalError + \"crypto unavailable\";\nvar tag = \"[object Decimal]\";\nvar mathfloor = Math.floor;\nvar mathpow = Math.pow;\nvar isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i;\nvar isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i;\nvar isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i;\nvar isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\nvar BASE = 1e7;\nvar LOG_BASE = 7;\nvar MAX_SAFE_INTEGER = 9007199254740991;\nvar LN10_PRECISION = LN10.length - 1;\nvar PI_PRECISION = PI.length - 1;\nvar P = { toStringTag: tag };\nP.absoluteValue = P.abs = function() {\n  var x = new this.constructor(this);\n  if (x.s < 0)\n    x.s = 1;\n  return finalise(x);\n};\nP.ceil = function() {\n  return finalise(new this.constructor(this), this.e + 1, 2);\n};\nP.clampedTo = P.clamp = function(min2, max2) {\n  var k, x = this, Ctor = x.constructor;\n  min2 = new Ctor(min2);\n  max2 = new Ctor(max2);\n  if (!min2.s || !max2.s)\n    return new Ctor(NaN);\n  if (min2.gt(max2))\n    throw Error(invalidArgument + max2);\n  k = x.cmp(min2);\n  return k < 0 ? min2 : x.cmp(max2) > 0 ? max2 : new Ctor(x);\n};\nP.comparedTo = P.cmp = function(y) {\n  var i, j, xdL, ydL, x = this, xd = x.d, yd = (y = new x.constructor(y)).d, xs = x.s, ys = y.s;\n  if (!xd || !yd) {\n    return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\n  }\n  if (!xd[0] || !yd[0])\n    return xd[0] ? xs : yd[0] ? -ys : 0;\n  if (xs !== ys)\n    return xs;\n  if (x.e !== y.e)\n    return x.e > y.e ^ xs < 0 ? 1 : -1;\n  xdL = xd.length;\n  ydL = yd.length;\n  for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\n    if (xd[i] !== yd[i])\n      return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\n  }\n  return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\n};\nP.cosine = P.cos = function() {\n  var pr, rm, x = this, Ctor = x.constructor;\n  if (!x.d)\n    return new Ctor(NaN);\n  if (!x.d[0])\n    return new Ctor(1);\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\n  Ctor.rounding = 1;\n  x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\n  Ctor.precision = pr;\n  Ctor.rounding = rm;\n  return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\n};\nP.cubeRoot = P.cbrt = function() {\n  var e, m, n, r, rep, s, sd, t, t3, t3plusx, x = this, Ctor = x.constructor;\n  if (!x.isFinite() || x.isZero())\n    return new Ctor(x);\n  external = false;\n  s = x.s * mathpow(x.s * x, 1 / 3);\n  if (!s || Math.abs(s) == 1 / 0) {\n    n = digitsToString(x.d);\n    e = x.e;\n    if (s = (e - n.length + 1) % 3)\n      n += s == 1 || s == -2 ? \"0\" : \"00\";\n    s = mathpow(n, 1 / 3);\n    e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\n    if (s == 1 / 0) {\n      n = \"5e\" + e;\n    } else {\n      n = s.toExponential();\n      n = n.slice(0, n.indexOf(\"e\") + 1) + e;\n    }\n    r = new Ctor(n);\n    r.s = x.s;\n  } else {\n    r = new Ctor(s.toString());\n  }\n  sd = (e = Ctor.precision) + 3;\n  for (; ; ) {\n    t = r;\n    t3 = t.times(t).times(t);\n    t3plusx = t3.plus(x);\n    r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\n      n = n.slice(sd - 3, sd + 1);\n      if (n == \"9999\" || !rep && n == \"4999\") {\n        if (!rep) {\n          finalise(t, e + 1, 0);\n          if (t.times(t).times(t).eq(x)) {\n            r = t;\n            break;\n          }\n        }\n        sd += 4;\n        rep = 1;\n      } else {\n        if (!+n || !+n.slice(1) && n.charAt(0) == \"5\") {\n          finalise(r, e + 1, 1);\n          m = !r.times(r).times(r).eq(x);\n        }\n        break;\n      }\n    }\n  }\n  external = true;\n  return finalise(r, e, Ctor.rounding, m);\n};\nP.decimalPlaces = P.dp = function() {\n  var w, d = this.d, n = NaN;\n  if (d) {\n    w = d.length - 1;\n    n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\n    w = d[w];\n    if (w)\n      for (; w % 10 == 0; w /= 10)\n        n--;\n    if (n < 0)\n      n = 0;\n  }\n  return n;\n};\nP.dividedBy = P.div = function(y) {\n  return divide(this, new this.constructor(y));\n};\nP.dividedToIntegerBy = P.divToInt = function(y) {\n  var x = this, Ctor = x.constructor;\n  return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\n};\nP.equals = P.eq = function(y) {\n  return this.cmp(y) === 0;\n};\nP.floor = function() {\n  return finalise(new this.constructor(this), this.e + 1, 3);\n};\nP.greaterThan = P.gt = function(y) {\n  return this.cmp(y) > 0;\n};\nP.greaterThanOrEqualTo = P.gte = function(y) {\n  var k = this.cmp(y);\n  return k == 1 || k === 0;\n};\nP.hyperbolicCosine = P.cosh = function() {\n  var k, n, pr, rm, len, x = this, Ctor = x.constructor, one = new Ctor(1);\n  if (!x.isFinite())\n    return new Ctor(x.s ? 1 / 0 : NaN);\n  if (x.isZero())\n    return one;\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\n  Ctor.rounding = 1;\n  len = x.d.length;\n  if (len < 32) {\n    k = Math.ceil(len / 3);\n    n = (1 / tinyPow(4, k)).toString();\n  } else {\n    k = 16;\n    n = \"2.3283064365386962890625e-10\";\n  }\n  x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\n  var cosh2_x, i = k, d8 = new Ctor(8);\n  for (; i--; ) {\n    cosh2_x = x.times(x);\n    x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\n  }\n  return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\n};\nP.hyperbolicSine = P.sinh = function() {\n  var k, pr, rm, len, x = this, Ctor = x.constructor;\n  if (!x.isFinite() || x.isZero())\n    return new Ctor(x);\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\n  Ctor.rounding = 1;\n  len = x.d.length;\n  if (len < 3) {\n    x = taylorSeries(Ctor, 2, x, x, true);\n  } else {\n    k = 1.4 * Math.sqrt(len);\n    k = k > 16 ? 16 : k | 0;\n    x = x.times(1 / tinyPow(5, k));\n    x = taylorSeries(Ctor, 2, x, x, true);\n    var sinh2_x, d5 = new Ctor(5), d16 = new Ctor(16), d20 = new Ctor(20);\n    for (; k--; ) {\n      sinh2_x = x.times(x);\n      x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\n    }\n  }\n  Ctor.precision = pr;\n  Ctor.rounding = rm;\n  return finalise(x, pr, rm, true);\n};\nP.hyperbolicTangent = P.tanh = function() {\n  var pr, rm, x = this, Ctor = x.constructor;\n  if (!x.isFinite())\n    return new Ctor(x.s);\n  if (x.isZero())\n    return new Ctor(x);\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  Ctor.precision = pr + 7;\n  Ctor.rounding = 1;\n  return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\n};\nP.inverseCosine = P.acos = function() {\n  var halfPi, x = this, Ctor = x.constructor, k = x.abs().cmp(1), pr = Ctor.precision, rm = Ctor.rounding;\n  if (k !== -1) {\n    return k === 0 ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0) : new Ctor(NaN);\n  }\n  if (x.isZero())\n    return getPi(Ctor, pr + 4, rm).times(0.5);\n  Ctor.precision = pr + 6;\n  Ctor.rounding = 1;\n  x = x.asin();\n  halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\n  Ctor.precision = pr;\n  Ctor.rounding = rm;\n  return halfPi.minus(x);\n};\nP.inverseHyperbolicCosine = P.acosh = function() {\n  var pr, rm, x = this, Ctor = x.constructor;\n  if (x.lte(1))\n    return new Ctor(x.eq(1) ? 0 : NaN);\n  if (!x.isFinite())\n    return new Ctor(x);\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\n  Ctor.rounding = 1;\n  external = false;\n  x = x.times(x).minus(1).sqrt().plus(x);\n  external = true;\n  Ctor.precision = pr;\n  Ctor.rounding = rm;\n  return x.ln();\n};\nP.inverseHyperbolicSine = P.asinh = function() {\n  var pr, rm, x = this, Ctor = x.constructor;\n  if (!x.isFinite() || x.isZero())\n    return new Ctor(x);\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\n  Ctor.rounding = 1;\n  external = false;\n  x = x.times(x).plus(1).sqrt().plus(x);\n  external = true;\n  Ctor.precision = pr;\n  Ctor.rounding = rm;\n  return x.ln();\n};\nP.inverseHyperbolicTangent = P.atanh = function() {\n  var pr, rm, wpr, xsd, x = this, Ctor = x.constructor;\n  if (!x.isFinite())\n    return new Ctor(NaN);\n  if (x.e >= 0)\n    return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  xsd = x.sd();\n  if (Math.max(xsd, pr) < 2 * -x.e - 1)\n    return finalise(new Ctor(x), pr, rm, true);\n  Ctor.precision = wpr = xsd - x.e;\n  x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\n  Ctor.precision = pr + 4;\n  Ctor.rounding = 1;\n  x = x.ln();\n  Ctor.precision = pr;\n  Ctor.rounding = rm;\n  return x.times(0.5);\n};\nP.inverseSine = P.asin = function() {\n  var halfPi, k, pr, rm, x = this, Ctor = x.constructor;\n  if (x.isZero())\n    return new Ctor(x);\n  k = x.abs().cmp(1);\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  if (k !== -1) {\n    if (k === 0) {\n      halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\n      halfPi.s = x.s;\n      return halfPi;\n    }\n    return new Ctor(NaN);\n  }\n  Ctor.precision = pr + 6;\n  Ctor.rounding = 1;\n  x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\n  Ctor.precision = pr;\n  Ctor.rounding = rm;\n  return x.times(2);\n};\nP.inverseTangent = P.atan = function() {\n  var i, j, k, n, px, t, r, wpr, x2, x = this, Ctor = x.constructor, pr = Ctor.precision, rm = Ctor.rounding;\n  if (!x.isFinite()) {\n    if (!x.s)\n      return new Ctor(NaN);\n    if (pr + 4 <= PI_PRECISION) {\n      r = getPi(Ctor, pr + 4, rm).times(0.5);\n      r.s = x.s;\n      return r;\n    }\n  } else if (x.isZero()) {\n    return new Ctor(x);\n  } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\n    r = getPi(Ctor, pr + 4, rm).times(0.25);\n    r.s = x.s;\n    return r;\n  }\n  Ctor.precision = wpr = pr + 10;\n  Ctor.rounding = 1;\n  k = Math.min(28, wpr / LOG_BASE + 2 | 0);\n  for (i = k; i; --i)\n    x = x.div(x.times(x).plus(1).sqrt().plus(1));\n  external = false;\n  j = Math.ceil(wpr / LOG_BASE);\n  n = 1;\n  x2 = x.times(x);\n  r = new Ctor(x);\n  px = x;\n  for (; i !== -1; ) {\n    px = px.times(x2);\n    t = r.minus(px.div(n += 2));\n    px = px.times(x2);\n    r = t.plus(px.div(n += 2));\n    if (r.d[j] !== void 0)\n      for (i = j; r.d[i] === t.d[i] && i--; )\n        ;\n  }\n  if (k)\n    r = r.times(2 << k - 1);\n  external = true;\n  return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\n};\nP.isFinite = function() {\n  return !!this.d;\n};\nP.isInteger = P.isInt = function() {\n  return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\n};\nP.isNaN = function() {\n  return !this.s;\n};\nP.isNegative = P.isNeg = function() {\n  return this.s < 0;\n};\nP.isPositive = P.isPos = function() {\n  return this.s > 0;\n};\nP.isZero = function() {\n  return !!this.d && this.d[0] === 0;\n};\nP.lessThan = P.lt = function(y) {\n  return this.cmp(y) < 0;\n};\nP.lessThanOrEqualTo = P.lte = function(y) {\n  return this.cmp(y) < 1;\n};\nP.logarithm = P.log = function(base) {\n  var isBase10, d, denominator, k, inf, num, sd, r, arg = this, Ctor = arg.constructor, pr = Ctor.precision, rm = Ctor.rounding, guard = 5;\n  if (base == null) {\n    base = new Ctor(10);\n    isBase10 = true;\n  } else {\n    base = new Ctor(base);\n    d = base.d;\n    if (base.s < 0 || !d || !d[0] || base.eq(1))\n      return new Ctor(NaN);\n    isBase10 = base.eq(10);\n  }\n  d = arg.d;\n  if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\n    return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\n  }\n  if (isBase10) {\n    if (d.length > 1) {\n      inf = true;\n    } else {\n      for (k = d[0]; k % 10 === 0; )\n        k /= 10;\n      inf = k !== 1;\n    }\n  }\n  external = false;\n  sd = pr + guard;\n  num = naturalLogarithm(arg, sd);\n  denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\n  r = divide(num, denominator, sd, 1);\n  if (checkRoundingDigits(r.d, k = pr, rm)) {\n    do {\n      sd += 10;\n      num = naturalLogarithm(arg, sd);\n      denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\n      r = divide(num, denominator, sd, 1);\n      if (!inf) {\n        if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\n          r = finalise(r, pr + 1, 0);\n        }\n        break;\n      }\n    } while (checkRoundingDigits(r.d, k += 10, rm));\n  }\n  external = true;\n  return finalise(r, pr, rm);\n};\nP.minus = P.sub = function(y) {\n  var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd, x = this, Ctor = x.constructor;\n  y = new Ctor(y);\n  if (!x.d || !y.d) {\n    if (!x.s || !y.s)\n      y = new Ctor(NaN);\n    else if (x.d)\n      y.s = -y.s;\n    else\n      y = new Ctor(y.d || x.s !== y.s ? x : NaN);\n    return y;\n  }\n  if (x.s != y.s) {\n    y.s = -y.s;\n    return x.plus(y);\n  }\n  xd = x.d;\n  yd = y.d;\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  if (!xd[0] || !yd[0]) {\n    if (yd[0])\n      y.s = -y.s;\n    else if (xd[0])\n      y = new Ctor(x);\n    else\n      return new Ctor(rm === 3 ? -0 : 0);\n    return external ? finalise(y, pr, rm) : y;\n  }\n  e = mathfloor(y.e / LOG_BASE);\n  xe = mathfloor(x.e / LOG_BASE);\n  xd = xd.slice();\n  k = xe - e;\n  if (k) {\n    xLTy = k < 0;\n    if (xLTy) {\n      d = xd;\n      k = -k;\n      len = yd.length;\n    } else {\n      d = yd;\n      e = xe;\n      len = xd.length;\n    }\n    i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\n    if (k > i) {\n      k = i;\n      d.length = 1;\n    }\n    d.reverse();\n    for (i = k; i--; )\n      d.push(0);\n    d.reverse();\n  } else {\n    i = xd.length;\n    len = yd.length;\n    xLTy = i < len;\n    if (xLTy)\n      len = i;\n    for (i = 0; i < len; i++) {\n      if (xd[i] != yd[i]) {\n        xLTy = xd[i] < yd[i];\n        break;\n      }\n    }\n    k = 0;\n  }\n  if (xLTy) {\n    d = xd;\n    xd = yd;\n    yd = d;\n    y.s = -y.s;\n  }\n  len = xd.length;\n  for (i = yd.length - len; i > 0; --i)\n    xd[len++] = 0;\n  for (i = yd.length; i > k; ) {\n    if (xd[--i] < yd[i]) {\n      for (j = i; j && xd[--j] === 0; )\n        xd[j] = BASE - 1;\n      --xd[j];\n      xd[i] += BASE;\n    }\n    xd[i] -= yd[i];\n  }\n  for (; xd[--len] === 0; )\n    xd.pop();\n  for (; xd[0] === 0; xd.shift())\n    --e;\n  if (!xd[0])\n    return new Ctor(rm === 3 ? -0 : 0);\n  y.d = xd;\n  y.e = getBase10Exponent(xd, e);\n  return external ? finalise(y, pr, rm) : y;\n};\nP.modulo = P.mod = function(y) {\n  var q, x = this, Ctor = x.constructor;\n  y = new Ctor(y);\n  if (!x.d || !y.s || y.d && !y.d[0])\n    return new Ctor(NaN);\n  if (!y.d || x.d && !x.d[0]) {\n    return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\n  }\n  external = false;\n  if (Ctor.modulo == 9) {\n    q = divide(x, y.abs(), 0, 3, 1);\n    q.s *= y.s;\n  } else {\n    q = divide(x, y, 0, Ctor.modulo, 1);\n  }\n  q = q.times(y);\n  external = true;\n  return x.minus(q);\n};\nP.naturalExponential = P.exp = function() {\n  return naturalExponential(this);\n};\nP.naturalLogarithm = P.ln = function() {\n  return naturalLogarithm(this);\n};\nP.negated = P.neg = function() {\n  var x = new this.constructor(this);\n  x.s = -x.s;\n  return finalise(x);\n};\nP.plus = P.add = function(y) {\n  var carry, d, e, i, k, len, pr, rm, xd, yd, x = this, Ctor = x.constructor;\n  y = new Ctor(y);\n  if (!x.d || !y.d) {\n    if (!x.s || !y.s)\n      y = new Ctor(NaN);\n    else if (!x.d)\n      y = new Ctor(y.d || x.s === y.s ? x : NaN);\n    return y;\n  }\n  if (x.s != y.s) {\n    y.s = -y.s;\n    return x.minus(y);\n  }\n  xd = x.d;\n  yd = y.d;\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  if (!xd[0] || !yd[0]) {\n    if (!yd[0])\n      y = new Ctor(x);\n    return external ? finalise(y, pr, rm) : y;\n  }\n  k = mathfloor(x.e / LOG_BASE);\n  e = mathfloor(y.e / LOG_BASE);\n  xd = xd.slice();\n  i = k - e;\n  if (i) {\n    if (i < 0) {\n      d = xd;\n      i = -i;\n      len = yd.length;\n    } else {\n      d = yd;\n      e = k;\n      len = xd.length;\n    }\n    k = Math.ceil(pr / LOG_BASE);\n    len = k > len ? k + 1 : len + 1;\n    if (i > len) {\n      i = len;\n      d.length = 1;\n    }\n    d.reverse();\n    for (; i--; )\n      d.push(0);\n    d.reverse();\n  }\n  len = xd.length;\n  i = yd.length;\n  if (len - i < 0) {\n    i = len;\n    d = yd;\n    yd = xd;\n    xd = d;\n  }\n  for (carry = 0; i; ) {\n    carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\n    xd[i] %= BASE;\n  }\n  if (carry) {\n    xd.unshift(carry);\n    ++e;\n  }\n  for (len = xd.length; xd[--len] == 0; )\n    xd.pop();\n  y.d = xd;\n  y.e = getBase10Exponent(xd, e);\n  return external ? finalise(y, pr, rm) : y;\n};\nP.precision = P.sd = function(z) {\n  var k, x = this;\n  if (z !== void 0 && z !== !!z && z !== 1 && z !== 0)\n    throw Error(invalidArgument + z);\n  if (x.d) {\n    k = getPrecision(x.d);\n    if (z && x.e + 1 > k)\n      k = x.e + 1;\n  } else {\n    k = NaN;\n  }\n  return k;\n};\nP.round = function() {\n  var x = this, Ctor = x.constructor;\n  return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\n};\nP.sine = P.sin = function() {\n  var pr, rm, x = this, Ctor = x.constructor;\n  if (!x.isFinite())\n    return new Ctor(NaN);\n  if (x.isZero())\n    return new Ctor(x);\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\n  Ctor.rounding = 1;\n  x = sine(Ctor, toLessThanHalfPi(Ctor, x));\n  Ctor.precision = pr;\n  Ctor.rounding = rm;\n  return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\n};\nP.squareRoot = P.sqrt = function() {\n  var m, n, sd, r, rep, t, x = this, d = x.d, e = x.e, s = x.s, Ctor = x.constructor;\n  if (s !== 1 || !d || !d[0]) {\n    return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\n  }\n  external = false;\n  s = Math.sqrt(+x);\n  if (s == 0 || s == 1 / 0) {\n    n = digitsToString(d);\n    if ((n.length + e) % 2 == 0)\n      n += \"0\";\n    s = Math.sqrt(n);\n    e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\n    if (s == 1 / 0) {\n      n = \"5e\" + e;\n    } else {\n      n = s.toExponential();\n      n = n.slice(0, n.indexOf(\"e\") + 1) + e;\n    }\n    r = new Ctor(n);\n  } else {\n    r = new Ctor(s.toString());\n  }\n  sd = (e = Ctor.precision) + 3;\n  for (; ; ) {\n    t = r;\n    r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\n      n = n.slice(sd - 3, sd + 1);\n      if (n == \"9999\" || !rep && n == \"4999\") {\n        if (!rep) {\n          finalise(t, e + 1, 0);\n          if (t.times(t).eq(x)) {\n            r = t;\n            break;\n          }\n        }\n        sd += 4;\n        rep = 1;\n      } else {\n        if (!+n || !+n.slice(1) && n.charAt(0) == \"5\") {\n          finalise(r, e + 1, 1);\n          m = !r.times(r).eq(x);\n        }\n        break;\n      }\n    }\n  }\n  external = true;\n  return finalise(r, e, Ctor.rounding, m);\n};\nP.tangent = P.tan = function() {\n  var pr, rm, x = this, Ctor = x.constructor;\n  if (!x.isFinite())\n    return new Ctor(NaN);\n  if (x.isZero())\n    return new Ctor(x);\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  Ctor.precision = pr + 10;\n  Ctor.rounding = 1;\n  x = x.sin();\n  x.s = 1;\n  x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\n  Ctor.precision = pr;\n  Ctor.rounding = rm;\n  return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\n};\nP.times = P.mul = function(y) {\n  var carry, e, i, k, r, rL, t, xdL, ydL, x = this, Ctor = x.constructor, xd = x.d, yd = (y = new Ctor(y)).d;\n  y.s *= x.s;\n  if (!xd || !xd[0] || !yd || !yd[0]) {\n    return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd ? NaN : !xd || !yd ? y.s / 0 : y.s * 0);\n  }\n  e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\n  xdL = xd.length;\n  ydL = yd.length;\n  if (xdL < ydL) {\n    r = xd;\n    xd = yd;\n    yd = r;\n    rL = xdL;\n    xdL = ydL;\n    ydL = rL;\n  }\n  r = [];\n  rL = xdL + ydL;\n  for (i = rL; i--; )\n    r.push(0);\n  for (i = ydL; --i >= 0; ) {\n    carry = 0;\n    for (k = xdL + i; k > i; ) {\n      t = r[k] + yd[i] * xd[k - i - 1] + carry;\n      r[k--] = t % BASE | 0;\n      carry = t / BASE | 0;\n    }\n    r[k] = (r[k] + carry) % BASE | 0;\n  }\n  for (; !r[--rL]; )\n    r.pop();\n  if (carry)\n    ++e;\n  else\n    r.shift();\n  y.d = r;\n  y.e = getBase10Exponent(r, e);\n  return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\n};\nP.toBinary = function(sd, rm) {\n  return toStringBinary(this, 2, sd, rm);\n};\nP.toDecimalPlaces = P.toDP = function(dp, rm) {\n  var x = this, Ctor = x.constructor;\n  x = new Ctor(x);\n  if (dp === void 0)\n    return x;\n  checkInt32(dp, 0, MAX_DIGITS);\n  if (rm === void 0)\n    rm = Ctor.rounding;\n  else\n    checkInt32(rm, 0, 8);\n  return finalise(x, dp + x.e + 1, rm);\n};\nP.toExponential = function(dp, rm) {\n  var str, x = this, Ctor = x.constructor;\n  if (dp === void 0) {\n    str = finiteToString(x, true);\n  } else {\n    checkInt32(dp, 0, MAX_DIGITS);\n    if (rm === void 0)\n      rm = Ctor.rounding;\n    else\n      checkInt32(rm, 0, 8);\n    x = finalise(new Ctor(x), dp + 1, rm);\n    str = finiteToString(x, true, dp + 1);\n  }\n  return x.isNeg() && !x.isZero() ? \"-\" + str : str;\n};\nP.toFixed = function(dp, rm) {\n  var str, y, x = this, Ctor = x.constructor;\n  if (dp === void 0) {\n    str = finiteToString(x);\n  } else {\n    checkInt32(dp, 0, MAX_DIGITS);\n    if (rm === void 0)\n      rm = Ctor.rounding;\n    else\n      checkInt32(rm, 0, 8);\n    y = finalise(new Ctor(x), dp + x.e + 1, rm);\n    str = finiteToString(y, false, dp + y.e + 1);\n  }\n  return x.isNeg() && !x.isZero() ? \"-\" + str : str;\n};\nP.toFraction = function(maxD) {\n  var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r, x = this, xd = x.d, Ctor = x.constructor;\n  if (!xd)\n    return new Ctor(x);\n  n1 = d0 = new Ctor(1);\n  d1 = n0 = new Ctor(0);\n  d = new Ctor(d1);\n  e = d.e = getPrecision(xd) - x.e - 1;\n  k = e % LOG_BASE;\n  d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\n  if (maxD == null) {\n    maxD = e > 0 ? d : n1;\n  } else {\n    n = new Ctor(maxD);\n    if (!n.isInt() || n.lt(n1))\n      throw Error(invalidArgument + n);\n    maxD = n.gt(d) ? e > 0 ? d : n1 : n;\n  }\n  external = false;\n  n = new Ctor(digitsToString(xd));\n  pr = Ctor.precision;\n  Ctor.precision = e = xd.length * LOG_BASE * 2;\n  for (; ; ) {\n    q = divide(n, d, 0, 1, 1);\n    d2 = d0.plus(q.times(d1));\n    if (d2.cmp(maxD) == 1)\n      break;\n    d0 = d1;\n    d1 = d2;\n    d2 = n1;\n    n1 = n0.plus(q.times(d2));\n    n0 = d2;\n    d2 = d;\n    d = n.minus(q.times(d2));\n    n = d2;\n  }\n  d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\n  n0 = n0.plus(d2.times(n1));\n  d0 = d0.plus(d2.times(d1));\n  n0.s = n1.s = x.s;\n  r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\n  Ctor.precision = pr;\n  external = true;\n  return r;\n};\nP.toHexadecimal = P.toHex = function(sd, rm) {\n  return toStringBinary(this, 16, sd, rm);\n};\nP.toNearest = function(y, rm) {\n  var x = this, Ctor = x.constructor;\n  x = new Ctor(x);\n  if (y == null) {\n    if (!x.d)\n      return x;\n    y = new Ctor(1);\n    rm = Ctor.rounding;\n  } else {\n    y = new Ctor(y);\n    if (rm === void 0) {\n      rm = Ctor.rounding;\n    } else {\n      checkInt32(rm, 0, 8);\n    }\n    if (!x.d)\n      return y.s ? x : y;\n    if (!y.d) {\n      if (y.s)\n        y.s = x.s;\n      return y;\n    }\n  }\n  if (y.d[0]) {\n    external = false;\n    x = divide(x, y, 0, rm, 1).times(y);\n    external = true;\n    finalise(x);\n  } else {\n    y.s = x.s;\n    x = y;\n  }\n  return x;\n};\nP.toNumber = function() {\n  return +this;\n};\nP.toOctal = function(sd, rm) {\n  return toStringBinary(this, 8, sd, rm);\n};\nP.toPower = P.pow = function(y) {\n  var e, k, pr, r, rm, s, x = this, Ctor = x.constructor, yn = +(y = new Ctor(y));\n  if (!x.d || !y.d || !x.d[0] || !y.d[0])\n    return new Ctor(mathpow(+x, yn));\n  x = new Ctor(x);\n  if (x.eq(1))\n    return x;\n  pr = Ctor.precision;\n  rm = Ctor.rounding;\n  if (y.eq(1))\n    return finalise(x, pr, rm);\n  e = mathfloor(y.e / LOG_BASE);\n  if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\n    r = intPow(Ctor, x, k, pr);\n    return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\n  }\n  s = x.s;\n  if (s < 0) {\n    if (e < y.d.length - 1)\n      return new Ctor(NaN);\n    if ((y.d[e] & 1) == 0)\n      s = 1;\n    if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\n      x.s = s;\n      return x;\n    }\n  }\n  k = mathpow(+x, yn);\n  e = k == 0 || !isFinite(k) ? mathfloor(yn * (Math.log(\"0.\" + digitsToString(x.d)) / Math.LN10 + x.e + 1)) : new Ctor(k + \"\").e;\n  if (e > Ctor.maxE + 1 || e < Ctor.minE - 1)\n    return new Ctor(e > 0 ? s / 0 : 0);\n  external = false;\n  Ctor.rounding = x.s = 1;\n  k = Math.min(12, (e + \"\").length);\n  r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\n  if (r.d) {\n    r = finalise(r, pr + 5, 1);\n    if (checkRoundingDigits(r.d, pr, rm)) {\n      e = pr + 10;\n      r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\n      if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\n        r = finalise(r, pr + 1, 0);\n      }\n    }\n  }\n  r.s = s;\n  external = true;\n  Ctor.rounding = rm;\n  return finalise(r, pr, rm);\n};\nP.toPrecision = function(sd, rm) {\n  var str, x = this, Ctor = x.constructor;\n  if (sd === void 0) {\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n  } else {\n    checkInt32(sd, 1, MAX_DIGITS);\n    if (rm === void 0)\n      rm = Ctor.rounding;\n    else\n      checkInt32(rm, 0, 8);\n    x = finalise(new Ctor(x), sd, rm);\n    str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\n  }\n  return x.isNeg() && !x.isZero() ? \"-\" + str : str;\n};\nP.toSignificantDigits = P.toSD = function(sd, rm) {\n  var x = this, Ctor = x.constructor;\n  if (sd === void 0) {\n    sd = Ctor.precision;\n    rm = Ctor.rounding;\n  } else {\n    checkInt32(sd, 1, MAX_DIGITS);\n    if (rm === void 0)\n      rm = Ctor.rounding;\n    else\n      checkInt32(rm, 0, 8);\n  }\n  return finalise(new Ctor(x), sd, rm);\n};\nP.toString = function() {\n  var x = this, Ctor = x.constructor, str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n  return x.isNeg() && !x.isZero() ? \"-\" + str : str;\n};\nP.truncated = P.trunc = function() {\n  return finalise(new this.constructor(this), this.e + 1, 1);\n};\nP.valueOf = P.toJSON = function() {\n  var x = this, Ctor = x.constructor, str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n  return x.isNeg() ? \"-\" + str : str;\n};\nfunction digitsToString(d) {\n  var i, k, ws, indexOfLastWord = d.length - 1, str = \"\", w = d[0];\n  if (indexOfLastWord > 0) {\n    str += w;\n    for (i = 1; i < indexOfLastWord; i++) {\n      ws = d[i] + \"\";\n      k = LOG_BASE - ws.length;\n      if (k)\n        str += getZeroString(k);\n      str += ws;\n    }\n    w = d[i];\n    ws = w + \"\";\n    k = LOG_BASE - ws.length;\n    if (k)\n      str += getZeroString(k);\n  } else if (w === 0) {\n    return \"0\";\n  }\n  for (; w % 10 === 0; )\n    w /= 10;\n  return str + w;\n}\n__name(digitsToString, \"digitsToString\");\nfunction checkInt32(i, min2, max2) {\n  if (i !== ~~i || i < min2 || i > max2) {\n    throw Error(invalidArgument + i);\n  }\n}\n__name(checkInt32, \"checkInt32\");\nfunction checkRoundingDigits(d, i, rm, repeating) {\n  var di, k, r, rd;\n  for (k = d[0]; k >= 10; k /= 10)\n    --i;\n  if (--i < 0) {\n    i += LOG_BASE;\n    di = 0;\n  } else {\n    di = Math.ceil((i + 1) / LOG_BASE);\n    i %= LOG_BASE;\n  }\n  k = mathpow(10, LOG_BASE - i);\n  rd = d[di] % k | 0;\n  if (repeating == null) {\n    if (i < 3) {\n      if (i == 0)\n        rd = rd / 100 | 0;\n      else if (i == 1)\n        rd = rd / 10 | 0;\n      r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 5e4 || rd == 0;\n    } else {\n      r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) && (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 || (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\n    }\n  } else {\n    if (i < 4) {\n      if (i == 0)\n        rd = rd / 1e3 | 0;\n      else if (i == 1)\n        rd = rd / 100 | 0;\n      else if (i == 2)\n        rd = rd / 10 | 0;\n      r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\n    } else {\n      r = ((repeating || rm < 4) && rd + 1 == k || !repeating && rm > 3 && rd + 1 == k / 2) && (d[di + 1] / k / 1e3 | 0) == mathpow(10, i - 3) - 1;\n    }\n  }\n  return r;\n}\n__name(checkRoundingDigits, \"checkRoundingDigits\");\nfunction convertBase(str, baseIn, baseOut) {\n  var j, arr = [0], arrL, i = 0, strL = str.length;\n  for (; i < strL; ) {\n    for (arrL = arr.length; arrL--; )\n      arr[arrL] *= baseIn;\n    arr[0] += NUMERALS.indexOf(str.charAt(i++));\n    for (j = 0; j < arr.length; j++) {\n      if (arr[j] > baseOut - 1) {\n        if (arr[j + 1] === void 0)\n          arr[j + 1] = 0;\n        arr[j + 1] += arr[j] / baseOut | 0;\n        arr[j] %= baseOut;\n      }\n    }\n  }\n  return arr.reverse();\n}\n__name(convertBase, \"convertBase\");\nfunction cosine(Ctor, x) {\n  var k, len, y;\n  if (x.isZero())\n    return x;\n  len = x.d.length;\n  if (len < 32) {\n    k = Math.ceil(len / 3);\n    y = (1 / tinyPow(4, k)).toString();\n  } else {\n    k = 16;\n    y = \"2.3283064365386962890625e-10\";\n  }\n  Ctor.precision += k;\n  x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\n  for (var i = k; i--; ) {\n    var cos2x = x.times(x);\n    x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\n  }\n  Ctor.precision -= k;\n  return x;\n}\n__name(cosine, \"cosine\");\nvar divide = function() {\n  function multiplyInteger(x, k, base) {\n    var temp, carry = 0, i = x.length;\n    for (x = x.slice(); i--; ) {\n      temp = x[i] * k + carry;\n      x[i] = temp % base | 0;\n      carry = temp / base | 0;\n    }\n    if (carry)\n      x.unshift(carry);\n    return x;\n  }\n  __name(multiplyInteger, \"multiplyInteger\");\n  function compare(a, b, aL, bL) {\n    var i, r;\n    if (aL != bL) {\n      r = aL > bL ? 1 : -1;\n    } else {\n      for (i = r = 0; i < aL; i++) {\n        if (a[i] != b[i]) {\n          r = a[i] > b[i] ? 1 : -1;\n          break;\n        }\n      }\n    }\n    return r;\n  }\n  __name(compare, \"compare\");\n  function subtract(a, b, aL, base) {\n    var i = 0;\n    for (; aL--; ) {\n      a[aL] -= i;\n      i = a[aL] < b[aL] ? 1 : 0;\n      a[aL] = i * base + a[aL] - b[aL];\n    }\n    for (; !a[0] && a.length > 1; )\n      a.shift();\n  }\n  __name(subtract, \"subtract\");\n  return function(x, y, pr, rm, dp, base) {\n    var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0, yL, yz, Ctor = x.constructor, sign2 = x.s == y.s ? 1 : -1, xd = x.d, yd = y.d;\n    if (!xd || !xd[0] || !yd || !yd[0]) {\n      return new Ctor(\n        !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN : xd && xd[0] == 0 || !yd ? sign2 * 0 : sign2 / 0\n      );\n    }\n    if (base) {\n      logBase = 1;\n      e = x.e - y.e;\n    } else {\n      base = BASE;\n      logBase = LOG_BASE;\n      e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\n    }\n    yL = yd.length;\n    xL = xd.length;\n    q = new Ctor(sign2);\n    qd = q.d = [];\n    for (i = 0; yd[i] == (xd[i] || 0); i++)\n      ;\n    if (yd[i] > (xd[i] || 0))\n      e--;\n    if (pr == null) {\n      sd = pr = Ctor.precision;\n      rm = Ctor.rounding;\n    } else if (dp) {\n      sd = pr + (x.e - y.e) + 1;\n    } else {\n      sd = pr;\n    }\n    if (sd < 0) {\n      qd.push(1);\n      more = true;\n    } else {\n      sd = sd / logBase + 2 | 0;\n      i = 0;\n      if (yL == 1) {\n        k = 0;\n        yd = yd[0];\n        sd++;\n        for (; (i < xL || k) && sd--; i++) {\n          t = k * base + (xd[i] || 0);\n          qd[i] = t / yd | 0;\n          k = t % yd | 0;\n        }\n        more = k || i < xL;\n      } else {\n        k = base / (yd[0] + 1) | 0;\n        if (k > 1) {\n          yd = multiplyInteger(yd, k, base);\n          xd = multiplyInteger(xd, k, base);\n          yL = yd.length;\n          xL = xd.length;\n        }\n        xi = yL;\n        rem = xd.slice(0, yL);\n        remL = rem.length;\n        for (; remL < yL; )\n          rem[remL++] = 0;\n        yz = yd.slice();\n        yz.unshift(0);\n        yd0 = yd[0];\n        if (yd[1] >= base / 2)\n          ++yd0;\n        do {\n          k = 0;\n          cmp = compare(yd, rem, yL, remL);\n          if (cmp < 0) {\n            rem0 = rem[0];\n            if (yL != remL)\n              rem0 = rem0 * base + (rem[1] || 0);\n            k = rem0 / yd0 | 0;\n            if (k > 1) {\n              if (k >= base)\n                k = base - 1;\n              prod = multiplyInteger(yd, k, base);\n              prodL = prod.length;\n              remL = rem.length;\n              cmp = compare(prod, rem, prodL, remL);\n              if (cmp == 1) {\n                k--;\n                subtract(prod, yL < prodL ? yz : yd, prodL, base);\n              }\n            } else {\n              if (k == 0)\n                cmp = k = 1;\n              prod = yd.slice();\n            }\n            prodL = prod.length;\n            if (prodL < remL)\n              prod.unshift(0);\n            subtract(rem, prod, remL, base);\n            if (cmp == -1) {\n              remL = rem.length;\n              cmp = compare(yd, rem, yL, remL);\n              if (cmp < 1) {\n                k++;\n                subtract(rem, yL < remL ? yz : yd, remL, base);\n              }\n            }\n            remL = rem.length;\n          } else if (cmp === 0) {\n            k++;\n            rem = [0];\n          }\n          qd[i++] = k;\n          if (cmp && rem[0]) {\n            rem[remL++] = xd[xi] || 0;\n          } else {\n            rem = [xd[xi]];\n            remL = 1;\n          }\n        } while ((xi++ < xL || rem[0] !== void 0) && sd--);\n        more = rem[0] !== void 0;\n      }\n      if (!qd[0])\n        qd.shift();\n    }\n    if (logBase == 1) {\n      q.e = e;\n      inexact = more;\n    } else {\n      for (i = 1, k = qd[0]; k >= 10; k /= 10)\n        i++;\n      q.e = i + e * logBase - 1;\n      finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\n    }\n    return q;\n  };\n}();\nfunction finalise(x, sd, rm, isTruncated) {\n  var digits, i, j, k, rd, roundUp, w, xd, xdi, Ctor = x.constructor;\n  out:\n    if (sd != null) {\n      xd = x.d;\n      if (!xd)\n        return x;\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10)\n        digits++;\n      i = sd - digits;\n      if (i < 0) {\n        i += LOG_BASE;\n        j = sd;\n        w = xd[xdi = 0];\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\n      } else {\n        xdi = Math.ceil((i + 1) / LOG_BASE);\n        k = xd.length;\n        if (xdi >= k) {\n          if (isTruncated) {\n            for (; k++ <= xdi; )\n              xd.push(0);\n            w = rd = 0;\n            digits = 1;\n            i %= LOG_BASE;\n            j = i - LOG_BASE + 1;\n          } else {\n            break out;\n          }\n        } else {\n          w = k = xd[xdi];\n          for (digits = 1; k >= 10; k /= 10)\n            digits++;\n          i %= LOG_BASE;\n          j = i - LOG_BASE + digits;\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\n        }\n      }\n      isTruncated = isTruncated || sd < 0 || xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\n      roundUp = rm < 4 ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 && (i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));\n      if (sd < 1 || !xd[0]) {\n        xd.length = 0;\n        if (roundUp) {\n          sd -= x.e + 1;\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\n          x.e = -sd || 0;\n        } else {\n          xd[0] = x.e = 0;\n        }\n        return x;\n      }\n      if (i == 0) {\n        xd.length = xdi;\n        k = 1;\n        xdi--;\n      } else {\n        xd.length = xdi + 1;\n        k = mathpow(10, LOG_BASE - i);\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\n      }\n      if (roundUp) {\n        for (; ; ) {\n          if (xdi == 0) {\n            for (i = 1, j = xd[0]; j >= 10; j /= 10)\n              i++;\n            j = xd[0] += k;\n            for (k = 1; j >= 10; j /= 10)\n              k++;\n            if (i != k) {\n              x.e++;\n              if (xd[0] == BASE)\n                xd[0] = 1;\n            }\n            break;\n          } else {\n            xd[xdi] += k;\n            if (xd[xdi] != BASE)\n              break;\n            xd[xdi--] = 0;\n            k = 1;\n          }\n        }\n      }\n      for (i = xd.length; xd[--i] === 0; )\n        xd.pop();\n    }\n  if (external) {\n    if (x.e > Ctor.maxE) {\n      x.d = null;\n      x.e = NaN;\n    } else if (x.e < Ctor.minE) {\n      x.e = 0;\n      x.d = [0];\n    }\n  }\n  return x;\n}\n__name(finalise, \"finalise\");\nfunction finiteToString(x, isExp, sd) {\n  if (!x.isFinite())\n    return nonFiniteToString(x);\n  var k, e = x.e, str = digitsToString(x.d), len = str.length;\n  if (isExp) {\n    if (sd && (k = sd - len) > 0) {\n      str = str.charAt(0) + \".\" + str.slice(1) + getZeroString(k);\n    } else if (len > 1) {\n      str = str.charAt(0) + \".\" + str.slice(1);\n    }\n    str = str + (x.e < 0 ? \"e\" : \"e+\") + x.e;\n  } else if (e < 0) {\n    str = \"0.\" + getZeroString(-e - 1) + str;\n    if (sd && (k = sd - len) > 0)\n      str += getZeroString(k);\n  } else if (e >= len) {\n    str += getZeroString(e + 1 - len);\n    if (sd && (k = sd - e - 1) > 0)\n      str = str + \".\" + getZeroString(k);\n  } else {\n    if ((k = e + 1) < len)\n      str = str.slice(0, k) + \".\" + str.slice(k);\n    if (sd && (k = sd - len) > 0) {\n      if (e + 1 === len)\n        str += \".\";\n      str += getZeroString(k);\n    }\n  }\n  return str;\n}\n__name(finiteToString, \"finiteToString\");\nfunction getBase10Exponent(digits, e) {\n  var w = digits[0];\n  for (e *= LOG_BASE; w >= 10; w /= 10)\n    e++;\n  return e;\n}\n__name(getBase10Exponent, \"getBase10Exponent\");\nfunction getLn10(Ctor, sd, pr) {\n  if (sd > LN10_PRECISION) {\n    external = true;\n    if (pr)\n      Ctor.precision = pr;\n    throw Error(precisionLimitExceeded);\n  }\n  return finalise(new Ctor(LN10), sd, 1, true);\n}\n__name(getLn10, \"getLn10\");\nfunction getPi(Ctor, sd, rm) {\n  if (sd > PI_PRECISION)\n    throw Error(precisionLimitExceeded);\n  return finalise(new Ctor(PI), sd, rm, true);\n}\n__name(getPi, \"getPi\");\nfunction getPrecision(digits) {\n  var w = digits.length - 1, len = w * LOG_BASE + 1;\n  w = digits[w];\n  if (w) {\n    for (; w % 10 == 0; w /= 10)\n      len--;\n    for (w = digits[0]; w >= 10; w /= 10)\n      len++;\n  }\n  return len;\n}\n__name(getPrecision, \"getPrecision\");\nfunction getZeroString(k) {\n  var zs = \"\";\n  for (; k--; )\n    zs += \"0\";\n  return zs;\n}\n__name(getZeroString, \"getZeroString\");\nfunction intPow(Ctor, x, n, pr) {\n  var isTruncated, r = new Ctor(1), k = Math.ceil(pr / LOG_BASE + 4);\n  external = false;\n  for (; ; ) {\n    if (n % 2) {\n      r = r.times(x);\n      if (truncate(r.d, k))\n        isTruncated = true;\n    }\n    n = mathfloor(n / 2);\n    if (n === 0) {\n      n = r.d.length - 1;\n      if (isTruncated && r.d[n] === 0)\n        ++r.d[n];\n      break;\n    }\n    x = x.times(x);\n    truncate(x.d, k);\n  }\n  external = true;\n  return r;\n}\n__name(intPow, \"intPow\");\nfunction isOdd(n) {\n  return n.d[n.d.length - 1] & 1;\n}\n__name(isOdd, \"isOdd\");\nfunction maxOrMin(Ctor, args, ltgt) {\n  var y, x = new Ctor(args[0]), i = 0;\n  for (; ++i < args.length; ) {\n    y = new Ctor(args[i]);\n    if (!y.s) {\n      x = y;\n      break;\n    } else if (x[ltgt](y)) {\n      x = y;\n    }\n  }\n  return x;\n}\n__name(maxOrMin, \"maxOrMin\");\nfunction naturalExponential(x, sd) {\n  var denominator, guard, j, pow2, sum2, t, wpr, rep = 0, i = 0, k = 0, Ctor = x.constructor, rm = Ctor.rounding, pr = Ctor.precision;\n  if (!x.d || !x.d[0] || x.e > 17) {\n    return new Ctor(x.d ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0 : x.s ? x.s < 0 ? 0 : x : 0 / 0);\n  }\n  if (sd == null) {\n    external = false;\n    wpr = pr;\n  } else {\n    wpr = sd;\n  }\n  t = new Ctor(0.03125);\n  while (x.e > -2) {\n    x = x.times(t);\n    k += 5;\n  }\n  guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\n  wpr += guard;\n  denominator = pow2 = sum2 = new Ctor(1);\n  Ctor.precision = wpr;\n  for (; ; ) {\n    pow2 = finalise(pow2.times(x), wpr, 1);\n    denominator = denominator.times(++i);\n    t = sum2.plus(divide(pow2, denominator, wpr, 1));\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum2.d).slice(0, wpr)) {\n      j = k;\n      while (j--)\n        sum2 = finalise(sum2.times(sum2), wpr, 1);\n      if (sd == null) {\n        if (rep < 3 && checkRoundingDigits(sum2.d, wpr - guard, rm, rep)) {\n          Ctor.precision = wpr += 10;\n          denominator = pow2 = t = new Ctor(1);\n          i = 0;\n          rep++;\n        } else {\n          return finalise(sum2, Ctor.precision = pr, rm, external = true);\n        }\n      } else {\n        Ctor.precision = pr;\n        return sum2;\n      }\n    }\n    sum2 = t;\n  }\n}\n__name(naturalExponential, \"naturalExponential\");\nfunction naturalLogarithm(y, sd) {\n  var c, c0, denominator, e, numerator, rep, sum2, t, wpr, x1, x2, n = 1, guard = 10, x = y, xd = x.d, Ctor = x.constructor, rm = Ctor.rounding, pr = Ctor.precision;\n  if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\n    return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\n  }\n  if (sd == null) {\n    external = false;\n    wpr = pr;\n  } else {\n    wpr = sd;\n  }\n  Ctor.precision = wpr += guard;\n  c = digitsToString(xd);\n  c0 = c.charAt(0);\n  if (Math.abs(e = x.e) < 15e14) {\n    while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\n      x = x.times(y);\n      c = digitsToString(x.d);\n      c0 = c.charAt(0);\n      n++;\n    }\n    e = x.e;\n    if (c0 > 1) {\n      x = new Ctor(\"0.\" + c);\n      e++;\n    } else {\n      x = new Ctor(c0 + \".\" + c.slice(1));\n    }\n  } else {\n    t = getLn10(Ctor, wpr + 2, pr).times(e + \"\");\n    x = naturalLogarithm(new Ctor(c0 + \".\" + c.slice(1)), wpr - guard).plus(t);\n    Ctor.precision = pr;\n    return sd == null ? finalise(x, pr, rm, external = true) : x;\n  }\n  x1 = x;\n  sum2 = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\n  x2 = finalise(x.times(x), wpr, 1);\n  denominator = 3;\n  for (; ; ) {\n    numerator = finalise(numerator.times(x2), wpr, 1);\n    t = sum2.plus(divide(numerator, new Ctor(denominator), wpr, 1));\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum2.d).slice(0, wpr)) {\n      sum2 = sum2.times(2);\n      if (e !== 0)\n        sum2 = sum2.plus(getLn10(Ctor, wpr + 2, pr).times(e + \"\"));\n      sum2 = divide(sum2, new Ctor(n), wpr, 1);\n      if (sd == null) {\n        if (checkRoundingDigits(sum2.d, wpr - guard, rm, rep)) {\n          Ctor.precision = wpr += guard;\n          t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\n          x2 = finalise(x.times(x), wpr, 1);\n          denominator = rep = 1;\n        } else {\n          return finalise(sum2, Ctor.precision = pr, rm, external = true);\n        }\n      } else {\n        Ctor.precision = pr;\n        return sum2;\n      }\n    }\n    sum2 = t;\n    denominator += 2;\n  }\n}\n__name(naturalLogarithm, \"naturalLogarithm\");\nfunction nonFiniteToString(x) {\n  return String(x.s * x.s / 0);\n}\n__name(nonFiniteToString, \"nonFiniteToString\");\nfunction parseDecimal(x, str) {\n  var e, i, len;\n  if ((e = str.indexOf(\".\")) > -1)\n    str = str.replace(\".\", \"\");\n  if ((i = str.search(/e/i)) > 0) {\n    if (e < 0)\n      e = i;\n    e += +str.slice(i + 1);\n    str = str.substring(0, i);\n  } else if (e < 0) {\n    e = str.length;\n  }\n  for (i = 0; str.charCodeAt(i) === 48; i++)\n    ;\n  for (len = str.length; str.charCodeAt(len - 1) === 48; --len)\n    ;\n  str = str.slice(i, len);\n  if (str) {\n    len -= i;\n    x.e = e = e - i - 1;\n    x.d = [];\n    i = (e + 1) % LOG_BASE;\n    if (e < 0)\n      i += LOG_BASE;\n    if (i < len) {\n      if (i)\n        x.d.push(+str.slice(0, i));\n      for (len -= LOG_BASE; i < len; )\n        x.d.push(+str.slice(i, i += LOG_BASE));\n      str = str.slice(i);\n      i = LOG_BASE - str.length;\n    } else {\n      i -= len;\n    }\n    for (; i--; )\n      str += \"0\";\n    x.d.push(+str);\n    if (external) {\n      if (x.e > x.constructor.maxE) {\n        x.d = null;\n        x.e = NaN;\n      } else if (x.e < x.constructor.minE) {\n        x.e = 0;\n        x.d = [0];\n      }\n    }\n  } else {\n    x.e = 0;\n    x.d = [0];\n  }\n  return x;\n}\n__name(parseDecimal, \"parseDecimal\");\nfunction parseOther(x, str) {\n  var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\n  if (str.indexOf(\"_\") > -1) {\n    str = str.replace(/(\\d)_(?=\\d)/g, \"$1\");\n    if (isDecimal.test(str))\n      return parseDecimal(x, str);\n  } else if (str === \"Infinity\" || str === \"NaN\") {\n    if (!+str)\n      x.s = NaN;\n    x.e = NaN;\n    x.d = null;\n    return x;\n  }\n  if (isHex.test(str)) {\n    base = 16;\n    str = str.toLowerCase();\n  } else if (isBinary.test(str)) {\n    base = 2;\n  } else if (isOctal.test(str)) {\n    base = 8;\n  } else {\n    throw Error(invalidArgument + str);\n  }\n  i = str.search(/p/i);\n  if (i > 0) {\n    p = +str.slice(i + 1);\n    str = str.substring(2, i);\n  } else {\n    str = str.slice(2);\n  }\n  i = str.indexOf(\".\");\n  isFloat = i >= 0;\n  Ctor = x.constructor;\n  if (isFloat) {\n    str = str.replace(\".\", \"\");\n    len = str.length;\n    i = len - i;\n    divisor = intPow(Ctor, new Ctor(base), i, i * 2);\n  }\n  xd = convertBase(str, base, BASE);\n  xe = xd.length - 1;\n  for (i = xe; xd[i] === 0; --i)\n    xd.pop();\n  if (i < 0)\n    return new Ctor(x.s * 0);\n  x.e = getBase10Exponent(xd, xe);\n  x.d = xd;\n  external = false;\n  if (isFloat)\n    x = divide(x, divisor, len * 4);\n  if (p)\n    x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\n  external = true;\n  return x;\n}\n__name(parseOther, \"parseOther\");\nfunction sine(Ctor, x) {\n  var k, len = x.d.length;\n  if (len < 3) {\n    return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\n  }\n  k = 1.4 * Math.sqrt(len);\n  k = k > 16 ? 16 : k | 0;\n  x = x.times(1 / tinyPow(5, k));\n  x = taylorSeries(Ctor, 2, x, x);\n  var sin2_x, d5 = new Ctor(5), d16 = new Ctor(16), d20 = new Ctor(20);\n  for (; k--; ) {\n    sin2_x = x.times(x);\n    x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\n  }\n  return x;\n}\n__name(sine, \"sine\");\nfunction taylorSeries(Ctor, n, x, y, isHyperbolic) {\n  var j, t, u, x2, i = 1, pr = Ctor.precision, k = Math.ceil(pr / LOG_BASE);\n  external = false;\n  x2 = x.times(x);\n  u = new Ctor(y);\n  for (; ; ) {\n    t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\n    u = isHyperbolic ? y.plus(t) : y.minus(t);\n    y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\n    t = u.plus(y);\n    if (t.d[k] !== void 0) {\n      for (j = k; t.d[j] === u.d[j] && j--; )\n        ;\n      if (j == -1)\n        break;\n    }\n    j = u;\n    u = y;\n    y = t;\n    t = j;\n    i++;\n  }\n  external = true;\n  t.d.length = k + 1;\n  return t;\n}\n__name(taylorSeries, \"taylorSeries\");\nfunction tinyPow(b, e) {\n  var n = b;\n  while (--e)\n    n *= b;\n  return n;\n}\n__name(tinyPow, \"tinyPow\");\nfunction toLessThanHalfPi(Ctor, x) {\n  var t, isNeg = x.s < 0, pi = getPi(Ctor, Ctor.precision, 1), halfPi = pi.times(0.5);\n  x = x.abs();\n  if (x.lte(halfPi)) {\n    quadrant = isNeg ? 4 : 1;\n    return x;\n  }\n  t = x.divToInt(pi);\n  if (t.isZero()) {\n    quadrant = isNeg ? 3 : 2;\n  } else {\n    x = x.minus(t.times(pi));\n    if (x.lte(halfPi)) {\n      quadrant = isOdd(t) ? isNeg ? 2 : 3 : isNeg ? 4 : 1;\n      return x;\n    }\n    quadrant = isOdd(t) ? isNeg ? 1 : 4 : isNeg ? 3 : 2;\n  }\n  return x.minus(pi).abs();\n}\n__name(toLessThanHalfPi, \"toLessThanHalfPi\");\nfunction toStringBinary(x, baseOut, sd, rm) {\n  var base, e, i, k, len, roundUp, str, xd, y, Ctor = x.constructor, isExp = sd !== void 0;\n  if (isExp) {\n    checkInt32(sd, 1, MAX_DIGITS);\n    if (rm === void 0)\n      rm = Ctor.rounding;\n    else\n      checkInt32(rm, 0, 8);\n  } else {\n    sd = Ctor.precision;\n    rm = Ctor.rounding;\n  }\n  if (!x.isFinite()) {\n    str = nonFiniteToString(x);\n  } else {\n    str = finiteToString(x);\n    i = str.indexOf(\".\");\n    if (isExp) {\n      base = 2;\n      if (baseOut == 16) {\n        sd = sd * 4 - 3;\n      } else if (baseOut == 8) {\n        sd = sd * 3 - 2;\n      }\n    } else {\n      base = baseOut;\n    }\n    if (i >= 0) {\n      str = str.replace(\".\", \"\");\n      y = new Ctor(1);\n      y.e = str.length - i;\n      y.d = convertBase(finiteToString(y), 10, base);\n      y.e = y.d.length;\n    }\n    xd = convertBase(str, 10, base);\n    e = len = xd.length;\n    for (; xd[--len] == 0; )\n      xd.pop();\n    if (!xd[0]) {\n      str = isExp ? \"0p+0\" : \"0\";\n    } else {\n      if (i < 0) {\n        e--;\n      } else {\n        x = new Ctor(x);\n        x.d = xd;\n        x.e = e;\n        x = divide(x, y, sd, rm, 0, base);\n        xd = x.d;\n        e = x.e;\n        roundUp = inexact;\n      }\n      i = xd[sd];\n      k = base / 2;\n      roundUp = roundUp || xd[sd + 1] !== void 0;\n      roundUp = rm < 4 ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2)) : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 || rm === (x.s < 0 ? 8 : 7));\n      xd.length = sd;\n      if (roundUp) {\n        for (; ++xd[--sd] > base - 1; ) {\n          xd[sd] = 0;\n          if (!sd) {\n            ++e;\n            xd.unshift(1);\n          }\n        }\n      }\n      for (len = xd.length; !xd[len - 1]; --len)\n        ;\n      for (i = 0, str = \"\"; i < len; i++)\n        str += NUMERALS.charAt(xd[i]);\n      if (isExp) {\n        if (len > 1) {\n          if (baseOut == 16 || baseOut == 8) {\n            i = baseOut == 16 ? 4 : 3;\n            for (--len; len % i; len++)\n              str += \"0\";\n            xd = convertBase(str, base, baseOut);\n            for (len = xd.length; !xd[len - 1]; --len)\n              ;\n            for (i = 1, str = \"1.\"; i < len; i++)\n              str += NUMERALS.charAt(xd[i]);\n          } else {\n            str = str.charAt(0) + \".\" + str.slice(1);\n          }\n        }\n        str = str + (e < 0 ? \"p\" : \"p+\") + e;\n      } else if (e < 0) {\n        for (; ++e; )\n          str = \"0\" + str;\n        str = \"0.\" + str;\n      } else {\n        if (++e > len)\n          for (e -= len; e--; )\n            str += \"0\";\n        else if (e < len)\n          str = str.slice(0, e) + \".\" + str.slice(e);\n      }\n    }\n    str = (baseOut == 16 ? \"0x\" : baseOut == 2 ? \"0b\" : baseOut == 8 ? \"0o\" : \"\") + str;\n  }\n  return x.s < 0 ? \"-\" + str : str;\n}\n__name(toStringBinary, \"toStringBinary\");\nfunction truncate(arr, len) {\n  if (arr.length > len) {\n    arr.length = len;\n    return true;\n  }\n}\n__name(truncate, \"truncate\");\nfunction abs(x) {\n  return new this(x).abs();\n}\n__name(abs, \"abs\");\nfunction acos(x) {\n  return new this(x).acos();\n}\n__name(acos, \"acos\");\nfunction acosh(x) {\n  return new this(x).acosh();\n}\n__name(acosh, \"acosh\");\nfunction add(x, y) {\n  return new this(x).plus(y);\n}\n__name(add, \"add\");\nfunction asin(x) {\n  return new this(x).asin();\n}\n__name(asin, \"asin\");\nfunction asinh(x) {\n  return new this(x).asinh();\n}\n__name(asinh, \"asinh\");\nfunction atan(x) {\n  return new this(x).atan();\n}\n__name(atan, \"atan\");\nfunction atanh(x) {\n  return new this(x).atanh();\n}\n__name(atanh, \"atanh\");\nfunction atan2(y, x) {\n  y = new this(y);\n  x = new this(x);\n  var r, pr = this.precision, rm = this.rounding, wpr = pr + 4;\n  if (!y.s || !x.s) {\n    r = new this(NaN);\n  } else if (!y.d && !x.d) {\n    r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\n    r.s = y.s;\n  } else if (!x.d || y.isZero()) {\n    r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\n    r.s = y.s;\n  } else if (!y.d || x.isZero()) {\n    r = getPi(this, wpr, 1).times(0.5);\n    r.s = y.s;\n  } else if (x.s < 0) {\n    this.precision = wpr;\n    this.rounding = 1;\n    r = this.atan(divide(y, x, wpr, 1));\n    x = getPi(this, wpr, 1);\n    this.precision = pr;\n    this.rounding = rm;\n    r = y.s < 0 ? r.minus(x) : r.plus(x);\n  } else {\n    r = this.atan(divide(y, x, wpr, 1));\n  }\n  return r;\n}\n__name(atan2, \"atan2\");\nfunction cbrt(x) {\n  return new this(x).cbrt();\n}\n__name(cbrt, \"cbrt\");\nfunction ceil(x) {\n  return finalise(x = new this(x), x.e + 1, 2);\n}\n__name(ceil, \"ceil\");\nfunction clamp(x, min2, max2) {\n  return new this(x).clamp(min2, max2);\n}\n__name(clamp, \"clamp\");\nfunction config(obj) {\n  if (!obj || typeof obj !== \"object\")\n    throw Error(decimalError + \"Object expected\");\n  var i, p, v, useDefaults = obj.defaults === true, ps = [\n    \"precision\",\n    1,\n    MAX_DIGITS,\n    \"rounding\",\n    0,\n    8,\n    \"toExpNeg\",\n    -EXP_LIMIT,\n    0,\n    \"toExpPos\",\n    0,\n    EXP_LIMIT,\n    \"maxE\",\n    0,\n    EXP_LIMIT,\n    \"minE\",\n    -EXP_LIMIT,\n    0,\n    \"modulo\",\n    0,\n    9\n  ];\n  for (i = 0; i < ps.length; i += 3) {\n    if (p = ps[i], useDefaults)\n      this[p] = DEFAULTS[p];\n    if ((v = obj[p]) !== void 0) {\n      if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2])\n        this[p] = v;\n      else\n        throw Error(invalidArgument + p + \": \" + v);\n    }\n  }\n  if (p = \"crypto\", useDefaults)\n    this[p] = DEFAULTS[p];\n  if ((v = obj[p]) !== void 0) {\n    if (v === true || v === false || v === 0 || v === 1) {\n      if (v) {\n        if (typeof crypto != \"undefined\" && crypto && (crypto.getRandomValues || crypto.randomBytes)) {\n          this[p] = true;\n        } else {\n          throw Error(cryptoUnavailable);\n        }\n      } else {\n        this[p] = false;\n      }\n    } else {\n      throw Error(invalidArgument + p + \": \" + v);\n    }\n  }\n  return this;\n}\n__name(config, \"config\");\nfunction cos(x) {\n  return new this(x).cos();\n}\n__name(cos, \"cos\");\nfunction cosh(x) {\n  return new this(x).cosh();\n}\n__name(cosh, \"cosh\");\nfunction clone(obj) {\n  var i, p, ps;\n  function Decimal2(v) {\n    var e, i2, t, x = this;\n    if (!(x instanceof Decimal2))\n      return new Decimal2(v);\n    x.constructor = Decimal2;\n    if (isDecimalInstance(v)) {\n      x.s = v.s;\n      if (external) {\n        if (!v.d || v.e > Decimal2.maxE) {\n          x.e = NaN;\n          x.d = null;\n        } else if (v.e < Decimal2.minE) {\n          x.e = 0;\n          x.d = [0];\n        } else {\n          x.e = v.e;\n          x.d = v.d.slice();\n        }\n      } else {\n        x.e = v.e;\n        x.d = v.d ? v.d.slice() : v.d;\n      }\n      return;\n    }\n    t = typeof v;\n    if (t === \"number\") {\n      if (v === 0) {\n        x.s = 1 / v < 0 ? -1 : 1;\n        x.e = 0;\n        x.d = [0];\n        return;\n      }\n      if (v < 0) {\n        v = -v;\n        x.s = -1;\n      } else {\n        x.s = 1;\n      }\n      if (v === ~~v && v < 1e7) {\n        for (e = 0, i2 = v; i2 >= 10; i2 /= 10)\n          e++;\n        if (external) {\n          if (e > Decimal2.maxE) {\n            x.e = NaN;\n            x.d = null;\n          } else if (e < Decimal2.minE) {\n            x.e = 0;\n            x.d = [0];\n          } else {\n            x.e = e;\n            x.d = [v];\n          }\n        } else {\n          x.e = e;\n          x.d = [v];\n        }\n        return;\n      } else if (v * 0 !== 0) {\n        if (!v)\n          x.s = NaN;\n        x.e = NaN;\n        x.d = null;\n        return;\n      }\n      return parseDecimal(x, v.toString());\n    } else if (t !== \"string\") {\n      throw Error(invalidArgument + v);\n    }\n    if ((i2 = v.charCodeAt(0)) === 45) {\n      v = v.slice(1);\n      x.s = -1;\n    } else {\n      if (i2 === 43)\n        v = v.slice(1);\n      x.s = 1;\n    }\n    return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\n  }\n  __name(Decimal2, \"Decimal\");\n  Decimal2.prototype = P;\n  Decimal2.ROUND_UP = 0;\n  Decimal2.ROUND_DOWN = 1;\n  Decimal2.ROUND_CEIL = 2;\n  Decimal2.ROUND_FLOOR = 3;\n  Decimal2.ROUND_HALF_UP = 4;\n  Decimal2.ROUND_HALF_DOWN = 5;\n  Decimal2.ROUND_HALF_EVEN = 6;\n  Decimal2.ROUND_HALF_CEIL = 7;\n  Decimal2.ROUND_HALF_FLOOR = 8;\n  Decimal2.EUCLID = 9;\n  Decimal2.config = Decimal2.set = config;\n  Decimal2.clone = clone;\n  Decimal2.isDecimal = isDecimalInstance;\n  Decimal2.abs = abs;\n  Decimal2.acos = acos;\n  Decimal2.acosh = acosh;\n  Decimal2.add = add;\n  Decimal2.asin = asin;\n  Decimal2.asinh = asinh;\n  Decimal2.atan = atan;\n  Decimal2.atanh = atanh;\n  Decimal2.atan2 = atan2;\n  Decimal2.cbrt = cbrt;\n  Decimal2.ceil = ceil;\n  Decimal2.clamp = clamp;\n  Decimal2.cos = cos;\n  Decimal2.cosh = cosh;\n  Decimal2.div = div;\n  Decimal2.exp = exp;\n  Decimal2.floor = floor;\n  Decimal2.hypot = hypot;\n  Decimal2.ln = ln;\n  Decimal2.log = log;\n  Decimal2.log10 = log10;\n  Decimal2.log2 = log2;\n  Decimal2.max = max;\n  Decimal2.min = min;\n  Decimal2.mod = mod;\n  Decimal2.mul = mul;\n  Decimal2.pow = pow;\n  Decimal2.random = random;\n  Decimal2.round = round;\n  Decimal2.sign = sign;\n  Decimal2.sin = sin;\n  Decimal2.sinh = sinh;\n  Decimal2.sqrt = sqrt;\n  Decimal2.sub = sub;\n  Decimal2.sum = sum;\n  Decimal2.tan = tan;\n  Decimal2.tanh = tanh;\n  Decimal2.trunc = trunc;\n  if (obj === void 0)\n    obj = {};\n  if (obj) {\n    if (obj.defaults !== true) {\n      ps = [\"precision\", \"rounding\", \"toExpNeg\", \"toExpPos\", \"maxE\", \"minE\", \"modulo\", \"crypto\"];\n      for (i = 0; i < ps.length; )\n        if (!obj.hasOwnProperty(p = ps[i++]))\n          obj[p] = this[p];\n    }\n  }\n  Decimal2.config(obj);\n  return Decimal2;\n}\n__name(clone, \"clone\");\nfunction div(x, y) {\n  return new this(x).div(y);\n}\n__name(div, \"div\");\nfunction exp(x) {\n  return new this(x).exp();\n}\n__name(exp, \"exp\");\nfunction floor(x) {\n  return finalise(x = new this(x), x.e + 1, 3);\n}\n__name(floor, \"floor\");\nfunction hypot() {\n  var i, n, t = new this(0);\n  external = false;\n  for (i = 0; i < arguments.length; ) {\n    n = new this(arguments[i++]);\n    if (!n.d) {\n      if (n.s) {\n        external = true;\n        return new this(1 / 0);\n      }\n      t = n;\n    } else if (t.d) {\n      t = t.plus(n.times(n));\n    }\n  }\n  external = true;\n  return t.sqrt();\n}\n__name(hypot, \"hypot\");\nfunction isDecimalInstance(obj) {\n  return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\n}\n__name(isDecimalInstance, \"isDecimalInstance\");\nfunction ln(x) {\n  return new this(x).ln();\n}\n__name(ln, \"ln\");\nfunction log(x, y) {\n  return new this(x).log(y);\n}\n__name(log, \"log\");\nfunction log2(x) {\n  return new this(x).log(2);\n}\n__name(log2, \"log2\");\nfunction log10(x) {\n  return new this(x).log(10);\n}\n__name(log10, \"log10\");\nfunction max() {\n  return maxOrMin(this, arguments, \"lt\");\n}\n__name(max, \"max\");\nfunction min() {\n  return maxOrMin(this, arguments, \"gt\");\n}\n__name(min, \"min\");\nfunction mod(x, y) {\n  return new this(x).mod(y);\n}\n__name(mod, \"mod\");\nfunction mul(x, y) {\n  return new this(x).mul(y);\n}\n__name(mul, \"mul\");\nfunction pow(x, y) {\n  return new this(x).pow(y);\n}\n__name(pow, \"pow\");\nfunction random(sd) {\n  var d, e, k, n, i = 0, r = new this(1), rd = [];\n  if (sd === void 0)\n    sd = this.precision;\n  else\n    checkInt32(sd, 1, MAX_DIGITS);\n  k = Math.ceil(sd / LOG_BASE);\n  if (!this.crypto) {\n    for (; i < k; )\n      rd[i++] = Math.random() * 1e7 | 0;\n  } else if (crypto.getRandomValues) {\n    d = crypto.getRandomValues(new Uint32Array(k));\n    for (; i < k; ) {\n      n = d[i];\n      if (n >= 429e7) {\n        d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\n      } else {\n        rd[i++] = n % 1e7;\n      }\n    }\n  } else if (crypto.randomBytes) {\n    d = crypto.randomBytes(k *= 4);\n    for (; i < k; ) {\n      n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 127) << 24);\n      if (n >= 214e7) {\n        crypto.randomBytes(4).copy(d, i);\n      } else {\n        rd.push(n % 1e7);\n        i += 4;\n      }\n    }\n    i = k / 4;\n  } else {\n    throw Error(cryptoUnavailable);\n  }\n  k = rd[--i];\n  sd %= LOG_BASE;\n  if (k && sd) {\n    n = mathpow(10, LOG_BASE - sd);\n    rd[i] = (k / n | 0) * n;\n  }\n  for (; rd[i] === 0; i--)\n    rd.pop();\n  if (i < 0) {\n    e = 0;\n    rd = [0];\n  } else {\n    e = -1;\n    for (; rd[0] === 0; e -= LOG_BASE)\n      rd.shift();\n    for (k = 1, n = rd[0]; n >= 10; n /= 10)\n      k++;\n    if (k < LOG_BASE)\n      e -= LOG_BASE - k;\n  }\n  r.e = e;\n  r.d = rd;\n  return r;\n}\n__name(random, \"random\");\nfunction round(x) {\n  return finalise(x = new this(x), x.e + 1, this.rounding);\n}\n__name(round, \"round\");\nfunction sign(x) {\n  x = new this(x);\n  return x.d ? x.d[0] ? x.s : 0 * x.s : x.s || NaN;\n}\n__name(sign, \"sign\");\nfunction sin(x) {\n  return new this(x).sin();\n}\n__name(sin, \"sin\");\nfunction sinh(x) {\n  return new this(x).sinh();\n}\n__name(sinh, \"sinh\");\nfunction sqrt(x) {\n  return new this(x).sqrt();\n}\n__name(sqrt, \"sqrt\");\nfunction sub(x, y) {\n  return new this(x).sub(y);\n}\n__name(sub, \"sub\");\nfunction sum() {\n  var i = 0, args = arguments, x = new this(args[i]);\n  external = false;\n  for (; x.s && ++i < args.length; )\n    x = x.plus(args[i]);\n  external = true;\n  return finalise(x, this.precision, this.rounding);\n}\n__name(sum, \"sum\");\nfunction tan(x) {\n  return new this(x).tan();\n}\n__name(tan, \"tan\");\nfunction tanh(x) {\n  return new this(x).tanh();\n}\n__name(tanh, \"tanh\");\nfunction trunc(x) {\n  return finalise(x = new this(x), x.e + 1, 1);\n}\n__name(trunc, \"trunc\");\nP[Symbol.for(\"nodejs.util.inspect.custom\")] = P.toString;\nP[Symbol.toStringTag] = \"Decimal\";\nvar Decimal = P.constructor = clone(DEFAULTS);\nLN10 = new Decimal(LN10);\nPI = new Decimal(PI);\nvar decimal_default = Decimal;\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Decimal,\n  makeStrictEnum,\n  objectEnumValues\n});\n/*!\n *  decimal.js v10.4.3\n *  An arbitrary-precision Decimal type for JavaScript.\n *  https://github.com/MikeMcl/decimal.js\n *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\n *  MIT Licence\n */\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}